var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/classes/ConnectionNotFoundError.html",[0,0.071,1,1.505]],["body/classes/ConnectionNotFoundError.html",[0,0.112,1,2.386,2,0.446,3,0.446,4,0.446,5,3.7,6,2.979,7,0.554,8,1.212,9,1.869,10,2.72,11,3.139,12,3.7,13,2.959,14,1.422,15,2.959,16,1.307,17,1.422,18,1.921,19,4.552,20,1.677,21,1.187,22,3.665,23,2.107,24,1.336,25,0.047,26,0.715,27,0.367,28,0.446,29,3.673,30,0.769,31,0.888,32,0.53,33,0.715,34,0.446,35,1.053,36,3.665,37,0.715,38,0.037,39,0.037]],["title/injectables/DNSHealthIndicator.html",[40,0.349,41,1.716]],["body/injectables/DNSHealthIndicator.html",[0,0.05,2,0.247,3,0.247,4,0.247,7,0.525,8,1.049,10,1.816,16,0.584,17,1.301,18,1.066,20,0.659,21,1.307,23,1.407,24,1.652,25,0.047,26,0.788,27,0.404,28,0.671,30,0.849,31,0.916,32,0.624,33,0.397,34,0.247,35,1.387,37,0.593,38,0.04,39,0.024,40,0.443,41,2.412,42,2.264,43,1.653,44,1.593,45,1.652,46,1.15,47,1.816,48,2.47,49,3.329,50,3.039,51,0.454,52,1.108,53,2.375,54,3.039,55,2.097,56,2.509,57,3.638,58,2.034,59,4.935,60,2.034,61,1.593,62,3.039,63,1.5,64,4.036,65,2.034,66,3.039,67,2.581,68,2.949,69,1.86,70,0.916,71,1.653,72,1.653,73,2.44,74,4.696,75,2.034,76,2.097,77,3.039,78,1.657,79,2.096,80,1.403,81,4.531,82,1.816,83,2.034,84,2.034,85,2.096,86,1.025,87,2.034,88,2.034,89,0.873,90,0.516,91,1.066,92,0.294,93,2.034,94,0.679,95,2.034,96,1.215,97,1.403,98,1.593,99,2.034,100,2.034,101,2.034,102,2.034,103,2.034,104,1.653,105,2.034,106,1.653,107,3.638,108,0.942,109,3.638,110,2.034,111,2.034,112,2.034,113,0.742,114,3.039,115,2.096,116,2.096,117,0.584,118,1.653,119,1.403,120,1.403,121,2.034,122,2.034,123,2.174,124,1.403,125,2.034,126,1.215,127,1.403,128,2.096,129,2.034]],["title/injectables/DatabaseHealthIndicator.html",[40,0.349,130,1.329]],["body/injectables/DatabaseHealthIndicator.html",[0,0.052,1,1.629,2,0.255,3,0.255,4,0.255,7,0.498,8,0.468,11,3.819,13,1.253,14,1.064,15,2.214,16,0.602,17,0.893,18,1.099,21,1.2,23,1.439,24,1.351,25,0.048,26,0.723,27,0.371,28,0.632,30,0.739,31,0.971,32,0.686,33,0.409,34,0.378,35,1.257,37,0.409,38,0.039,39,0.025,40,0.451,42,2.147,44,1.629,45,1.595,46,1.04,47,1.858,51,0.468,52,1.134,53,2.147,55,2.121,56,2.555,63,1.064,67,2.214,68,2.615,69,1.682,70,0.894,72,1.705,78,2.156,79,2.144,82,1.858,85,2.144,86,0.789,89,1.064,90,0.533,91,1.099,92,0.303,94,0.694,96,1.253,97,1.447,98,1.629,108,1.897,113,1.351,115,2.826,116,1.447,117,0.893,120,1.447,123,2.835,124,1.447,126,1.253,127,1.447,128,2.144,130,1.897,131,1.447,132,3.168,133,3.109,134,2.097,135,2.097,136,2.448,137,2.097,138,2.527,139,2.448,140,2.527,141,1.253,142,4.115,143,2.097,144,2.527,145,2.097,146,2.527,147,2.527,148,2.527,149,1.447,150,1.099,151,1.351,152,2.527,153,1.705,154,1.253,155,1.705,156,1.447,157,1.447,158,1.099,159,2.527,160,1.705,161,1.705,162,1.705,163,1.447,164,1.705,165,1.439,166,1.705,167,1.705,168,1.705,169,1.705,170,1.447,171,1.447,172,1.253,173,1.099]],["title/interfaces/DatabasePingCheckSettings.html",[92,0.415,136,1.716]],["body/interfaces/DatabasePingCheckSettings.html",[0,0.058,1,1.777,2,0.287,3,0.287,4,0.287,7,0.287,8,0.527,11,3.845,13,1.411,14,0.974,15,2.026,16,0.678,17,0.974,23,1.093,25,0.048,27,0.339,28,0.624,30,0.67,31,1.001,32,0.711,33,0.461,34,0.412,35,1.318,37,0.461,38,0.037,39,0.027,40,0.412,42,1.238,44,1.238,45,1.446,46,0.861,47,1.411,51,0.527,53,1.777,55,1.569,56,1.629,63,0.678,67,2.37,68,2.37,69,1.392,70,0.774,78,2.184,79,1.629,82,1.411,85,1.629,86,0.6,89,1.139,90,0.6,91,1.238,92,0.49,94,0.757,96,1.411,97,1.629,98,1.777,108,2.006,113,1.446,115,2.989,116,1.629,117,0.974,120,1.629,123,2.941,124,1.629,126,1.411,127,1.629,128,2.338,130,1.569,131,1.629,132,3.064,136,2.37,138,1.92,139,2.37,140,1.92,141,1.411,142,4.093,144,1.92,146,1.92,147,1.92,148,1.92,149,1.629,150,1.238,151,1.446,152,2.756,153,1.92,154,2.026,155,2.756,156,2.338,157,2.338,158,1.777,159,3.224,160,1.92,161,1.92,162,1.92,163,1.629,164,1.92,165,1.569,166,1.92,167,1.92,168,1.92,169,1.92,170,1.629,171,1.629,172,1.411,173,1.238,174,1.777]],["title/classes/HealthIndicator.html",[0,0.071,94,0.641]],["body/classes/HealthIndicator.html",[0,0.103,2,0.389,3,0.389,4,0.389,7,0.507,20,1.034,21,1.034,24,1.164,25,0.047,26,0.623,27,0.465,28,0.658,30,0.885,32,0.462,34,0.389,35,1.334,38,0.044,39,0.034,42,2.185,45,1.91,46,1.059,51,0.713,52,1.52,63,1.414,68,3.269,69,2.15,70,0.814,80,2.202,91,2.433,94,0.931,123,3.052,175,3.39,176,2.596,177,1.93,178,4.643,179,4.17,180,1.52,181,4.643,182,4.643,183,3.194,184,4.643,185,3.39,186,3.194,187,3.39,188,4.17,189,4.17,190,3.39,191,4.17,192,2.596,193,2.596,194,3.194]],["title/injectables/TerminusBootstrapService.html",[40,0.349,195,1.505]],["body/injectables/TerminusBootstrapService.html",[0,0.038,2,0.425,3,0.189,4,0.189,7,0.464,8,1.18,9,1.435,10,1.473,12,2.842,14,1.004,17,1.223,18,1.292,20,0.994,21,1.542,23,1.141,24,1.391,25,0.047,26,0.744,27,0.407,28,0.606,29,1.7,30,0.819,31,0.793,32,0.587,33,0.303,34,0.189,35,1.223,38,0.037,39,0.02,40,0.425,44,1.292,45,1.481,46,0.779,48,3.101,51,0.346,52,0.899,53,2.811,55,1.618,63,0.881,67,1.473,69,1.012,70,0.973,71,2.842,76,1.618,86,1.081,89,1.004,90,0.394,92,0.224,94,0.852,96,2.427,98,1.292,113,1.119,117,1.269,119,1.07,126,1.473,139,1.473,141,0.927,165,1.88,170,1.07,174,1.292,195,1.292,196,2.846,197,1.261,198,2.427,199,2.411,200,2.089,201,1.488,202,2.089,203,2.842,204,0.494,205,3.815,206,2.243,207,3.496,208,3.068,209,3.068,210,3.302,211,3.496,212,2.465,213,2.465,214,4.062,215,1.551,216,0.888,217,3.496,218,3.496,219,2.465,220,2.465,221,2.004,222,2.465,223,3.302,224,3.592,225,1.551,226,1.551,227,1.618,228,1.551,229,2.465,230,1.551,231,1.435,232,1.551,233,1.618,234,1.551,235,3.815,236,4.259,237,2.465,238,1.551,239,1.814,240,2.465,241,1.551,242,2.465,243,3.462,244,1.551,245,2.465,246,1.551,247,2.465,248,0.927,249,1.07,250,1.261,251,1.261,252,1.261,253,1.551,254,1.551,255,1.551,256,1.551,257,1.551,258,2.465,259,1.551,260,1.551,261,1.551,262,1.551,263,1.551,264,1.551,265,1.551,266,1.551,267,1.551,268,1.551,269,1.551,270,1.551,271,1.551,272,1.551,273,1.551,274,1.551,275,1.551,276,1.261,277,2.465,278,1.551,279,1.551,280,1.551,281,1.551,282,1.551,283,1.551,284,1.551,285,1.551,286,1.261,287,1.551,288,1.551,289,1.551,290,1.551,291,1.551,292,1.551,293,1.551,294,1.551,295,1.551]],["title/modules/TerminusCoreModule.html",[204,0.349,296,1.505]],["body/modules/TerminusCoreModule.html",[0,0.049,2,0.243,3,0.243,4,0.243,7,0.522,21,1.297,24,1.46,25,0.047,26,0.781,27,0.401,28,0.689,30,0.338,32,0.723,34,0.522,35,1.15,37,1.074,38,0.024,39,0.024,40,0.365,41,2.153,45,0.73,52,0.73,53,2.098,55,0.926,61,1.573,70,1.026,76,2.224,90,0.508,98,1.049,130,1.985,154,2.392,165,1.39,195,2.518,196,2.563,198,2.936,199,2.07,200,1.794,201,1.533,202,1.794,204,0.677,216,1.144,248,2.392,250,1.627,296,2.448,297,2.248,298,1.627,299,1.627,300,1.627,301,1.627,302,2.44,303,1.627,304,1.049,305,2.001,306,3.661,307,3.002,308,2.44,309,3.905,310,3.002,311,2.001,312,1.825,313,2.001,314,4.804,315,3.002,316,2.001,317,2.001,318,1.627,319,2.44,320,2.001,321,3.254,322,3.254,323,3.487,324,1.627,325,2.44,326,2.001,327,1.39,328,3.002,329,3.603,330,1.232,331,1.627,332,1.627,333,2.001,334,2.761,335,2.001,336,1.794,337,2.001,338,1.627,339,3.002,340,2.001,341,2.001,342,3.603,343,3.002,344,3.002,345,3.603,346,1.049,347,1.39,348,2.001,349,2.001,350,2.001]],["title/interfaces/TerminusEndpoint.html",[92,0.415,231,1.178]],["body/interfaces/TerminusEndpoint.html",[0,0.068,2,0.337,3,0.337,4,0.337,7,0.337,8,0.965,14,0.795,16,0.795,17,1.088,20,1.227,25,0.048,26,0.739,27,0.503,28,0.611,30,0.869,31,0.981,32,0.703,33,0.54,34,0.592,37,0.95,38,0.03,39,0.03,40,0.461,46,1.097,51,0.618,63,1.334,70,0.54,73,2.326,86,0.962,89,1.088,90,0.702,92,0.726,94,1.038,117,1.088,174,1.985,177,1.753,180,1.009,201,1.478,204,0.592,206,1.753,216,1.097,227,2.151,231,1.773,233,2.326,239,1.136,312,1.009,327,1.281,330,1.136,346,1.45,347,1.281,351,1.281,352,1.281,353,1.985,354,1.653,355,1.653,356,1.653,357,1.45,358,1.985,359,1.653,360,2.264,361,1.653,362,1.653,363,1.653,364,1.653,365,1.45,366,1.653,367,1.653]],["title/modules/TerminusModule.html",[204,0.349,336,1.716]],["body/modules/TerminusModule.html",[0,0.079,2,0.388,3,0.388,4,0.388,7,0.564,21,1.349,24,1.518,25,0.047,26,0.813,27,0.417,28,0.671,32,0.738,33,0.622,34,0.388,35,1.196,38,0.034,39,0.034,52,1.162,61,1.67,70,0.96,80,2.198,90,0.809,177,1.928,198,2.939,201,1.597,204,0.695,216,1.249,296,1.67,308,3.385,309,3.998,312,1.793,318,2.591,319,3.385,321,3.385,323,4.148,324,2.591,325,3.385,327,1.928,331,2.591,332,2.591,336,2.939,368,3.187,369,3.187,370,3.187,371,3.187,372,3.187,373,3.187,374,3.187]],["title/interfaces/TerminusModuleAsyncOptions.html",[92,0.415,312,1.047]],["body/interfaces/TerminusModuleAsyncOptions.html",[0,0.089,2,0.313,3,0.313,4,0.313,7,0.313,8,0.929,14,0.74,16,1.036,17,1.036,20,1.46,25,0.048,26,0.959,27,0.545,28,0.683,30,0.762,31,0.812,32,0.711,33,0.503,34,0.577,37,1.021,38,0.029,39,0.029,40,0.598,46,1.204,51,0.575,63,1.294,70,0.503,73,1.669,86,0.916,89,0.74,90,0.654,92,0.711,94,0.575,117,1.036,174,1.89,177,1.193,180,1.517,201,1.522,204,0.626,206,1.669,216,1.056,227,1.669,231,1.48,233,2.086,239,1.058,312,1.315,327,1.669,330,1.058,346,2.362,347,2.086,351,1.193,352,1.193,353,1.35,354,1.54,355,1.54,356,1.54,357,1.35,358,1.89,359,1.54,360,2.486,361,1.54,362,2.155,363,2.155,364,2.155,365,1.89,366,2.693,367,1.54]],["title/interfaces/TerminusModuleOptions.html",[92,0.415,216,0.729]],["body/interfaces/TerminusModuleOptions.html",[0,0.069,2,0.341,3,0.341,4,0.341,7,0.341,8,0.971,14,0.804,16,0.804,17,1.097,20,1.237,25,0.048,26,0.745,27,0.505,28,0.648,30,0.789,31,0.848,32,0.706,33,0.546,34,0.595,37,0.954,38,0.031,39,0.031,40,0.465,46,1.104,51,0.625,63,1.097,70,0.546,73,1.768,86,0.97,89,0.804,90,0.711,92,0.729,94,0.625,117,1.097,174,2.002,177,1.296,180,1.021,201,1.509,204,0.614,206,2.262,216,1.186,227,1.768,231,1.917,233,2.432,239,1.149,312,1.021,327,1.296,330,1.149,346,1.467,347,1.296,351,1.296,352,1.296,353,1.467,354,1.673,355,1.673,356,1.673,357,1.467,358,2.447,359,2.282,360,2.282,361,1.673,362,1.673,363,1.673,364,1.673,365,1.467,366,1.673,367,1.673]],["title/interfaces/TerminusOptionsFactory.html",[92,0.415,330,1.178]],["body/interfaces/TerminusOptionsFactory.html",[0,0.069,2,0.341,3,0.341,4,0.341,7,0.341,8,0.971,14,0.804,16,0.804,17,1.097,20,1.237,21,0.907,25,0.048,26,0.745,27,0.467,28,0.639,30,0.789,31,0.848,32,0.706,33,0.546,34,0.595,37,0.984,38,0.031,39,0.031,40,0.465,46,1.104,51,0.625,52,1.393,63,1.097,70,0.848,73,1.768,86,1.104,89,0.804,90,0.711,92,0.746,94,0.625,117,1.097,177,1.296,180,1.393,201,1.53,204,0.614,206,1.768,216,1.186,227,1.768,231,1.568,233,2.161,239,1.149,312,1.021,327,1.296,330,1.568,346,1.467,347,1.296,351,1.768,352,1.296,353,1.467,354,1.673,355,1.673,356,1.673,357,1.467,358,2.002,359,1.673,360,2.598,361,2.79,362,1.673,363,1.673,364,1.673,365,1.467,366,1.673,367,1.673,375,2.8]],["title/classes/TimeoutError.html",[0,0.071,151,1.047]],["body/classes/TimeoutError.html",[0,0.111,2,0.434,3,0.434,4,0.434,7,0.545,8,1.146,9,1.837,10,2.675,16,1.286,17,1.405,18,1.87,20,1.661,21,1.156,23,2.072,24,1.301,25,0.047,26,0.696,27,0.357,28,0.434,29,3.774,30,0.867,31,1.001,32,0.516,33,0.696,34,0.434,35,1.286,38,0.036,39,0.036,76,2.072,78,2.213,108,2.374,132,2.675,151,1.632,158,2.346,171,2.46,172,2.132,376,3.639,377,2.9,378,4.476,379,4.476,380,3.568,381,3.568]],["title/classes/TimeoutError-1.html",[0,0.06,151,0.88,163,1.665]],["body/classes/TimeoutError-1.html",[0,0.11,2,0.43,3,0.43,4,0.43,7,0.43,8,1.088,9,1.452,16,1.279,25,0.047,34,0.542,35,1.279,38,0.036,39,0.036,70,0.869,76,2.061,78,2.242,86,1.425,89,1.279,108,2.061,113,1.289,150,1.853,151,1.776,158,2.762,165,1.637,172,2.113,180,1.289,304,1.853,382,2.439,383,2.439,384,3.619,385,2.875,386,3.619,387,2.439,388,3.619,389,2.875,390,2.875,391,2.875,392,2.875,393,2.875,394,2.875,395,2.875,396,2.875,397,2.439,398,2.875]],["title/contributing.html",[9,0.991,399,1.665,400,1.962]],["body/contributing.html",[2,0.168,3,0.273,4,0.345,7,0.273,9,0.922,13,1.343,25,0.038,26,0.27,27,0.225,28,0.345,31,0.27,32,0.2,37,0.27,38,0.018,39,0.018,44,1.488,46,1.112,47,0.826,49,3.294,52,0.504,61,2.021,82,1.697,86,0.351,104,1.124,106,1.124,113,1.406,117,1.372,118,1.827,119,0.953,156,1.55,157,0.953,173,1.488,187,2.659,190,1.124,200,0.826,202,0.826,203,1.124,210,1.827,221,1.827,223,1.827,239,0.922,252,1.124,276,1.827,286,1.124,297,1.178,304,1.488,322,1.124,353,1.714,365,1.178,387,0.953,397,1.55,399,0.953,400,2.308,401,1.382,402,3.599,403,2.308,404,2.84,405,3.599,406,1.382,407,2.247,408,1.124,409,3.856,410,3.658,411,4.777,412,2.247,413,4.501,414,2.84,415,5.107,416,4.501,417,4.697,418,2.84,419,3.599,420,5.107,421,2.84,422,2.659,423,1.382,424,3.135,425,1.827,426,1.382,427,1.55,428,2.84,429,4.606,430,1.382,431,1.382,432,2.247,433,1.382,434,3.271,435,3.271,436,2.84,437,2.247,438,2.247,439,2.247,440,1.124,441,1.382,442,1.382,443,1.382,444,1.382,445,2.247,446,1.382,447,1.382,448,1.382,449,1.382,450,1.124,451,2.247,452,3.599,453,1.382,454,1.382,455,1.382,456,1.382,457,1.382,458,1.382,459,1.382,460,1.382,461,1.382,462,4.379,463,3.599,464,4.606,465,4.606,466,2.84,467,2.84,468,2.84,469,2.84,470,1.124,471,2.247,472,1.382,473,5.321,474,1.382,475,1.382,476,3.271,477,2.247,478,1.382,479,2.247,480,1.382,481,2.247,482,2.247,483,1.382,484,2.247,485,1.827,486,1.382,487,1.382,488,1.382,489,1.382,490,3.271,491,2.247,492,1.382,493,1.382,494,1.382,495,2.308,496,1.382,497,1.382,498,1.382,499,3.271,500,3.271,501,1.382,502,1.382,503,2.247,504,2.247,505,2.247,506,1.382,507,1.382,508,1.382,509,1.382,510,1.382,511,2.247,512,2.247,513,2.247,514,1.382,515,3.271,516,1.382,517,1.382,518,1.382,519,1.382,520,3.271,521,1.382,522,1.382,523,1.382,524,1.382,525,2.84,526,1.382,527,1.382,528,1.382,529,4.777,530,4.697,531,2.247,532,1.382,533,3.856,534,1.382,535,2.84,536,1.382,537,3.658,538,2.247,539,1.382,540,2.247,541,1.382,542,1.382,543,2.256,544,2.84,545,2.247,546,1.382,547,1.382,548,2.247,549,2.247,550,1.382,551,2.247,552,2.247,553,1.382,554,1.382,555,3.599,556,2.247,557,2.247,558,1.382,559,1.382,560,3.271,561,1.382,562,1.382,563,2.247,564,1.382,565,2.247,566,1.382,567,1.124,568,2.247,569,1.382,570,3.271,571,1.382,572,2.84,573,1.382,574,2.84,575,1.382,576,1.382,577,2.247,578,1.382,579,1.382,580,2.84,581,1.382,582,2.247,583,1.382,584,1.382,585,2.308,586,1.382,587,1.382,588,1.382,589,2.247,590,1.382,591,1.382,592,1.382,593,2.247,594,1.382,595,1.382,596,1.827,597,2.247,598,1.382,599,1.382,600,1.124,601,1.382,602,1.382,603,1.382,604,1.382,605,3.271,606,1.382,607,1.382,608,1.382,609,1.382,610,1.382,611,1.382,612,3.599,613,3.271,614,3.271,615,1.382,616,3.271,617,3.271,618,1.382,619,1.382,620,1.124,621,1.382,622,1.382,623,1.382,624,2.247,625,1.382,626,1.382,627,1.124,628,1.382,629,1.382,630,1.382,631,1.382,632,1.382,633,3.599,634,1.382,635,1.382,636,1.382,637,1.382,638,1.827,639,2.247,640,1.382,641,1.382,642,1.382,643,1.124,644,2.247,645,1.382,646,1.382,647,1.382,648,1.382,649,1.382,650,1.124,651,1.382,652,1.382,653,1.382,654,1.382,655,1.382,656,1.382,657,1.382,658,2.247,659,1.382,660,1.382,661,1.382,662,1.382,663,1.382,664,2.247,665,2.247,666,2.247,667,1.382,668,1.382,669,1.382,670,1.382,671,1.382,672,1.382,673,1.382,674,2.84,675,1.382,676,1.382,677,1.382,678,1.382,679,1.382,680,3.271,681,3.599,682,1.124,683,1.382,684,1.382,685,1.382,686,1.382,687,1.382,688,1.382,689,1.382,690,1.382,691,1.382,692,1.382,693,1.382,694,1.382,695,1.382,696,1.382,697,1.382]],["title/coverage.html",[698,3.158]],["body/coverage.html",[0,0.124,1,1.764,4,0.41,5,2.737,6,2.737,25,0.046,27,0.337,38,0.035,39,0.035,40,0.579,41,2.012,42,2.632,43,2.737,92,0.751,94,0.752,113,1.228,130,1.558,131,2.976,136,2.012,150,1.764,151,1.573,175,2.737,176,2.737,195,1.764,196,2.578,197,2.737,204,0.611,216,0.855,231,1.382,248,2.012,249,2.322,312,1.228,330,1.382,334,2.322,351,2.325,352,2.325,376,2.737,377,2.737,382,2.976,383,2.976,543,2.322,596,4.623,698,2.737,699,3.367,700,3.367,701,5.022,702,3.367,703,4.315,704,3.367,705,3.367,706,3.367,707,3.367,708,3.367,709,3.367,710,2.737,711,3.463,712,5.192,713,3.507,714,3.367,715,3.367]],["title/dependencies.html",[297,1.805,716,2.414]],["body/dependencies.html",[25,0.046,33,0.83,38,0.04,39,0.04,90,1.08,149,2.934,251,3.458,297,2.23,627,3.458,717,4.255,718,4.981,719,4.255,720,4.255,721,4.255,722,4.255,723,4.255,724,4.255,725,4.255,726,4.255]],["title/index.html",[9,0.991,51,0.539,399,1.665]],["body/index.html",[0,0.076,2,0.376,3,0.376,7,0.376,14,0.887,15,1.846,25,0.047,28,0.376,30,0.854,31,0.892,32,0.59,33,0.603,34,0.376,37,0.603,38,0.033,39,0.033,40,0.496,45,1.127,49,2.131,55,1.43,61,2.394,73,1.43,78,1.675,94,0.69,130,2.115,132,2.438,154,2.438,165,1.43,173,2.138,192,3.317,193,3.317,201,1.172,204,0.591,216,0.784,224,2.511,233,1.43,243,2.511,306,2.511,347,1.43,403,2.511,408,2.511,410,2.511,422,2.511,424,2.511,425,2.511,427,2.814,440,2.511,450,2.511,470,2.511,485,2.511,495,2.511,543,2.131,567,2.511,585,3.317,600,2.511,638,2.511,643,2.511,650,2.511,682,3.714,727,3.09,728,3.09,729,3.09,730,3.09,731,3.09,732,3.09,733,3.09,734,3.09,735,3.09,736,4.08,737,4.08,738,3.09,739,3.09,740,4.08,741,3.09,742,3.09,743,3.09,744,3.09,745,3.09,746,3.09,747,3.09,748,3.09,749,3.09,750,3.09,751,3.09,752,3.09,753,3.09,754,3.09,755,4.08,756,3.09,757,3.09,758,3.09,759,3.09,760,3.09,761,3.09,762,3.09,763,3.09,764,3.09,765,3.09,766,3.09,767,3.09,768,3.09,769,3.09,770,3.09,771,3.09]],["title/modules.html",[204,0.473]],["body/modules.html",[25,0.041,38,0.041,39,0.041,173,2.315,204,0.537,296,2.315,336,2.64,427,3.047,772,4.418,773,4.418,774,5.091,775,4.418]],["title/overview.html",[776,3.158]],["body/overview.html",[0,0.103,25,0.042,34,0.51,37,0.817,38,0.04,39,0.04,40,0.51,92,0.605,195,2.75,198,2.503,204,0.6,296,2.84,297,2.195,298,3.405,299,3.405,300,3.405,301,3.405,302,4.012,303,3.405,304,2.195,776,3.405,777,4.188,778,4.188,779,4.188,780,4.188]],["title/miscellaneous/typealiases.html",[781,1.443,782,3.444]],["body/miscellaneous/typealiases.html",[8,0.898,14,1.155,25,0.039,27,0.482,30,0.872,31,0.785,38,0.042,39,0.039,45,1.756,46,1.021,51,0.898,69,1.651,91,2.703,117,1.155,180,1.881,185,3.269,201,1.155,204,0.586,206,1.861,227,2.387,239,1.651,351,1.861,352,2.23,357,2.107,358,2.703,781,2.403,783,4.021,784,4.817,785,5.158,786,3.269,787,4.021]],["title/miscellaneous/variables.html",[711,2.375,781,1.443]],["body/miscellaneous/variables.html",[25,0.047,27,0.473,28,0.402,37,0.645,38,0.034,39,0.034,40,0.574,51,0.738,63,1.432,69,1.75,70,0.832,76,1.974,78,2.119,86,1.365,89,0.949,108,1.53,113,1.205,139,2.98,141,2.98,150,2.474,151,1.205,158,2.614,180,1.205,196,1.975,199,2.279,200,1.975,201,1.225,202,1.975,204,0.402,216,0.839,248,2.821,249,3.439,304,1.732,334,3.255,338,2.686,382,2.279,383,2.94,384,2.686,385,2.686,386,2.686,387,2.94,388,3.466,389,2.686,390,2.686,391,2.686,392,2.686,393,2.686,394,2.686,395,2.686,396,2.686,397,2.279,398,2.686,537,2.686,620,2.686,710,3.466,711,2.279,713,2.686,781,1.975,786,2.686,788,3.305,789,4.264,790,3.305,791,4.264,792,3.305,793,3.305]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0.1.12",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["0.19.0",{"_index":105,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["0.2.9",{"_index":721,"title":{},"body":{"dependencies.html":{}}}],["1",{"_index":163,"title":{"classes/TimeoutError-1.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["1/1",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":596,"title":{},"body":{"contributing.html":{},"coverage.html":{}}}],["1000",{"_index":159,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["1000m",{"_index":140,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["2",{"_index":777,"title":{},"body":{"overview.html":{}}}],["2/2",{"_index":701,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":778,"title":{},"body":{"overview.html":{}}}],["3/3",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":744,"title":{},"body":{"index.html":{}}}],["300m",{"_index":742,"title":{},"body":{"index.html":{}}}],["39;https://google.com&#39",{"_index":84,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["3rd",{"_index":516,"title":{},"body":{"contributing.html":{}}}],["4",{"_index":779,"title":{},"body":{"overview.html":{}}}],["4.1.0",{"_index":722,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":780,"title":{},"body":{"overview.html":{}}}],["5.2.2",{"_index":720,"title":{},"body":{"dependencies.html":{}}}],["5.5.0",{"_index":718,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["6.3.3",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":706,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":85,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["90",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["abstract",{"_index":178,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["accept",{"_index":484,"title":{},"body":{"contributing.html":{}}}],["access",{"_index":752,"title":{},"body":{"index.html":{}}}],["ad",{"_index":662,"title":{},"body":{"contributing.html":{}}}],["add",{"_index":552,"title":{},"body":{"contributing.html":{}}}],["addit",{"_index":190,"title":{},"body":{"classes/HealthIndicator.html":{},"contributing.html":{}}}],["adher",{"_index":546,"title":{},"body":{"contributing.html":{}}}],["affect",{"_index":639,"title":{},"body":{"contributing.html":{}}}],["agreement",{"_index":683,"title":{},"body":{"contributing.html":{}}}],["alias",{"_index":783,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":477,"title":{},"body":{"contributing.html":{}}}],["alreadi",{"_index":494,"title":{},"body":{"contributing.html":{}}}],["amaz",{"_index":758,"title":{},"body":{"index.html":{}}}],["amount",{"_index":155,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["angular",{"_index":735,"title":{},"body":{"index.html":{}}}],["answer",{"_index":434,"title":{},"body":{"contributing.html":{}}}],["api",{"_index":588,"title":{},"body":{"contributing.html":{}}}],["append",{"_index":191,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["applic",{"_index":14,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["applicationreferencehost",{"_index":218,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["appropri",{"_index":536,"title":{},"body":{"contributing.html":{}}}],["arg",{"_index":367,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["ask",{"_index":439,"title":{},"body":{"contributing.html":{}}}],["assur",{"_index":446,"title":{},"body":{"contributing.html":{}}}],["async",{"_index":55,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"index.html":{}}}],["asynchrn",{"_index":314,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["asynchron",{"_index":327,"title":{},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["asyncprovid",{"_index":339,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["author",{"_index":763,"title":{},"body":{"index.html":{}}}],["autom",{"_index":598,"title":{},"body":{"contributing.html":{}}}],["automat",{"_index":549,"title":{},"body":{"contributing.html":{}}}],["avail",{"_index":173,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{},"index.html":{},"modules.html":{}}}],["await",{"_index":98,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["axio",{"_index":81,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axioserror",{"_index":64,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axiosrequestconfig",{"_index":74,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["axiosrespons",{"_index":93,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["b",{"_index":532,"title":{},"body":{"contributing.html":{}}}],["back",{"_index":513,"title":{},"body":{"contributing.html":{}}}],["backer",{"_index":759,"title":{},"body":{"index.html":{}}}],["be",{"_index":637,"title":{},"body":{"contributing.html":{}}}],["befor",{"_index":490,"title":{},"body":{"contributing.html":{}}}],["begin",{"_index":634,"title":{},"body":{"contributing.html":{}}}],["behavior",{"_index":673,"title":{},"body":{"contributing.html":{}}}],["best",{"_index":447,"title":{},"body":{"contributing.html":{}}}],["beta.5bugfix(@nestjs/cor",{"_index":626,"title":{},"body":{"contributing.html":{}}}],["better",{"_index":405,"title":{},"body":{"contributing.html":{}}}],["between",{"_index":396,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["bodi",{"_index":613,"title":{},"body":{"contributing.html":{}}}],["boolean",{"_index":184,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["bootstrap",{"_index":198,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"overview.html":{}}}],["bootstrap.servic",{"_index":333,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["bootstrap.service.t",{"_index":197,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"coverage.html":{}}}],["bootstrap.service.ts:102",{"_index":232,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:130",{"_index":234,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:144",{"_index":225,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:158",{"_index":244,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:26",{"_index":246,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:30",{"_index":219,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:50",{"_index":228,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:81",{"_index":238,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrap.service.ts:93",{"_index":241,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["bootstrapterminu",{"_index":207,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["branch",{"_index":530,"title":{},"body":{"contributing.html":{}}}],["break",{"_index":674,"title":{},"body":{"contributing.html":{}}}],["broccoli",{"_index":642,"title":{},"body":{"contributing.html":{}}}],["brows",{"_index":774,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":772,"title":{},"body":{"modules.html":{}}}],["browserstack",{"_index":648,"title":{},"body":{"contributing.html":{}}}],["brunner",{"_index":767,"title":{},"body":{"index.html":{}}}],["bug",{"_index":416,"title":{},"body":{"contributing.html":{}}}],["bugfix",{"_index":651,"title":{},"body":{"contributing.html":{}}}],["build",{"_index":638,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["call",{"_index":245,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["capit",{"_index":667,"title":{},"body":{"contributing.html":{}}}],["case",{"_index":118,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["catch",{"_index":127,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["caus",{"_index":29,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["chanc",{"_index":433,"title":{},"body":{"contributing.html":{}}}],["chang",{"_index":473,"title":{},"body":{"contributing.html":{}}}],["channel",{"_index":460,"title":{},"body":{"contributing.html":{}}}],["charact",{"_index":597,"title":{},"body":{"contributing.html":{}}}],["chat",{"_index":455,"title":{},"body":{"contributing.html":{}}}],["check",{"_index":31,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["checkout",{"_index":531,"title":{},"body":{"contributing.html":{}}}],["ci",{"_index":644,"title":{},"body":{"contributing.html":{}}}],["circl",{"_index":647,"title":{},"body":{"contributing.html":{}}}],["cla",{"_index":681,"title":{},"body":{"contributing.html":{}}}],["class",{"_index":0,"title":{"classes/ConnectionNotFoundError.html":{},"classes/HealthIndicator.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["cleartimeout(id",{"_index":392,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["click",{"_index":689,"title":{},"body":{"contributing.html":{}}}],["close",{"_index":452,"title":{},"body":{"contributing.html":{}}}],["cluster_terminuscoremodul",{"_index":300,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["cluster_terminuscoremodule_provid",{"_index":301,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["code",{"_index":411,"title":{},"body":{"contributing.html":{}}}],["colon",{"_index":660,"title":{},"body":{"contributing.html":{}}}],["command",{"_index":550,"title":{},"body":{"contributing.html":{}}}],["commit",{"_index":420,"title":{},"body":{"contributing.html":{}}}],["common",{"_index":179,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["concat(error",{"_index":274,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["conduct",{"_index":412,"title":{},"body":{"contributing.html":{}}}],["conduct][coc",{"_index":426,"title":{},"body":{"contributing.html":{}}}],["configur",{"_index":203,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["confirm",{"_index":501,"title":{},"body":{"contributing.html":{}}}],["connect",{"_index":11,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["connection.query('select",{"_index":162,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["connectionnotfounderror",{"_index":1,"title":{"classes/ConnectionNotFoundError.html":{}},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["consid",{"_index":471,"title":{},"body":{"contributing.html":{}}}],["consist",{"_index":582,"title":{},"body":{"contributing.html":{}}}],["const",{"_index":165,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"classes/TimeoutError-1.html":{},"index.html":{}}}],["constructor",{"_index":18,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["constructor(@opt",{"_index":160,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["constructor(caus",{"_index":19,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["constructor(connect",{"_index":134,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["constructor(httpservic",{"_index":58,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["constructor(opt",{"_index":215,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["constructor(priv",{"_index":95,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["constructor(timeout",{"_index":379,"title":{},"body":{"classes/TimeoutError.html":{}}}],["contain",{"_index":44,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["context",{"_index":15,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"index.html":{}}}],["contrast",{"_index":672,"title":{},"body":{"contributing.html":{}}}],["contribut",{"_index":400,"title":{"contributing.html":{}},"body":{"contributing.html":{}}}],["contributor",{"_index":407,"title":{},"body":{"contributing.html":{}}}],["convent",{"_index":545,"title":{},"body":{"contributing.html":{}}}],["coordin",{"_index":478,"title":{},"body":{"contributing.html":{}}}],["copi",{"_index":630,"title":{},"body":{"contributing.html":{}}}],["core.modul",{"_index":371,"title":{},"body":{"modules/TerminusModule.html":{}}}],["core.module.t",{"_index":305,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["core.module.ts:100",{"_index":313,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["core.module.ts:35",{"_index":320,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["core.module.ts:59",{"_index":326,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["core.module.ts:80",{"_index":317,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["corpor",{"_index":691,"title":{},"body":{"contributing.html":{}}}],["correct",{"_index":322,"title":{},"body":{"modules/TerminusCoreModule.html":{},"contributing.html":{}}}],["correctli",{"_index":751,"title":{},"body":{"index.html":{}}}],["correspond",{"_index":79,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["coverag",{"_index":698,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["craft",{"_index":482,"title":{},"body":{"contributing.html":{}}}],["creat",{"_index":387,"title":{},"body":{"classes/TimeoutError-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["createasyncoptionsprovid",{"_index":310,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createasyncoptionsprovider(opt",{"_index":311,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createasyncprovid",{"_index":315,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createasyncproviders(opt",{"_index":316,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["createterminu",{"_index":792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createterminusopt",{"_index":361,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["creation",{"_index":363,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["current",{"_index":277,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["d",{"_index":579,"title":{},"body":{"contributing.html":{}}}],["databas",{"_index":132,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"index.html":{}}}],["databasehealthind",{"_index":130,"title":{"injectables/DatabaseHealthIndicator.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"index.html":{}}}],["databasehealthindicator.pingcheck(&#39;db&#39",{"_index":143,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["databasehealthindicator.pingcheck('db",{"_index":164,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["databasepingcheckset",{"_index":136,"title":{"interfaces/DatabasePingCheckSettings.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["db",{"_index":740,"title":{},"body":{"index.html":{}}}],["db.pingcheck('databas",{"_index":743,"title":{},"body":{"index.html":{}}}],["declar",{"_index":299,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["default",{"_index":139,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":21,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{}}}],["delet",{"_index":570,"title":{},"body":{"contributing.html":{}}}],["depend",{"_index":297,"title":{"dependencies.html":{}},"body":{"modules/TerminusCoreModule.html":{},"contributing.html":{},"dependencies.html":{},"overview.html":{}}}],["describ",{"_index":541,"title":{},"body":{"contributing.html":{}}}],["descript",{"_index":7,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"index.html":{}}}],["detail",{"_index":589,"title":{},"body":{"contributing.html":{}}}],["develop",{"_index":542,"title":{},"body":{"contributing.html":{}}}],["developer.md",{"_index":601,"title":{},"body":{"contributing.html":{}}}],["directli",{"_index":489,"title":{},"body":{"contributing.html":{}}}],["discuss",{"_index":476,"title":{},"body":{"contributing.html":{}}}],["dn",{"_index":50,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["dnshealthind",{"_index":41,"title":{"injectables/DNSHealthIndicator.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{}}}],["dnshealthindicator.pingcheck(&#39;google&#39",{"_index":83,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["dnshealthindicator.pingcheck('googl",{"_index":121,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["doc",{"_index":650,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["docs(changelog",{"_index":625,"title":{},"body":{"contributing.html":{}}}],["document",{"_index":543,"title":{},"body":{"contributing.html":{},"coverage.html":{},"index.html":{}}}],["don't",{"_index":520,"title":{},"body":{"contributing.html":{}}}],["dot",{"_index":669,"title":{},"body":{"contributing.html":{}}}],["down",{"_index":194,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["duplic",{"_index":481,"title":{},"body":{"contributing.html":{}}}],["dynamicmodul",{"_index":323,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["each",{"_index":611,"title":{},"body":{"contributing.html":{}}}],["easi",{"_index":608,"title":{},"body":{"contributing.html":{}}}],["easier",{"_index":620,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["ecosystem",{"_index":372,"title":{},"body":{"modules/TerminusModule.html":{}}}],["edit",{"_index":554,"title":{},"body":{"contributing.html":{}}}],["effici",{"_index":730,"title":{},"body":{"index.html":{}}}],["effort",{"_index":479,"title":{},"body":{"contributing.html":{}}}],["end",{"_index":670,"title":{},"body":{"contributing.html":{}}}],["endpoint",{"_index":233,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{}}}],["endpoint.healthind",{"_index":273,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["enough",{"_index":522,"title":{},"body":{"contributing.html":{}}}],["ensur",{"_index":544,"title":{},"body":{"contributing.html":{}}}],["err",{"_index":128,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["error",{"_index":8,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/typealiases.html":{}}}],["error.isaxioserror",{"_index":102,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.messag",{"_index":114,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.respons",{"_index":110,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.response.statu",{"_index":111,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.response.statustext",{"_index":112,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["error.stack",{"_index":267,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["error.t",{"_index":377,"title":{},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["error.ts:7",{"_index":380,"title":{},"body":{"classes/TimeoutError.html":{}}}],["errors.length",{"_index":279,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["errors.push(error.caus",{"_index":260,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["etc",{"_index":661,"title":{},"body":{"contributing.html":{}}}],["even",{"_index":404,"title":{},"body":{"contributing.html":{}}}],["everyth",{"_index":750,"title":{},"body":{"index.html":{}}}],["exampl",{"_index":82,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["exce",{"_index":378,"title":{},"body":{"classes/TimeoutError.html":{}}}],["exceed",{"_index":172,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["execut",{"_index":89,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["executehealthind",{"_index":208,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["executehealthindicators(healthind",{"_index":226,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["exist",{"_index":365,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["explan",{"_index":679,"title":{},"body":{"contributing.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"index.html":{},"overview.html":{}}}],["express",{"_index":290,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["extend",{"_index":16,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["extern",{"_index":640,"title":{},"body":{"contributing.html":{}}}],["f",{"_index":565,"title":{},"body":{"contributing.html":{}}}],["f$r",{"_index":362,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["factori",{"_index":360,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["fail",{"_index":119,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["fals",{"_index":116,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["fastifi",{"_index":292,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["fax",{"_index":695,"title":{},"body":{"contributing.html":{}}}],["featur",{"_index":417,"title":{},"body":{"contributing.html":{}}}],["ff",{"_index":581,"title":{},"body":{"contributing.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{}}}],["fill",{"_index":523,"title":{},"body":{"contributing.html":{}}}],["find",{"_index":461,"title":{},"body":{"contributing.html":{}}}],["finish",{"_index":385,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["first",{"_index":469,"title":{},"body":{"contributing.html":{}}}],["fix",{"_index":465,"title":{},"body":{"contributing.html":{}}}],["follow",{"_index":410,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["footer",{"_index":614,"title":{},"body":{"contributing.html":{}}}],["forc",{"_index":564,"title":{},"body":{"contributing.html":{}}}],["fork",{"_index":526,"title":{},"body":{"contributing.html":{}}}],["form",{"_index":524,"title":{},"body":{"contributing.html":{}}}],["form][corpor",{"_index":697,"title":{},"body":{"contributing.html":{}}}],["form][individu",{"_index":690,"title":{},"body":{"contributing.html":{}}}],["format",{"_index":605,"title":{},"body":{"contributing.html":{}}}],["formatt",{"_index":599,"title":{},"body":{"contributing.html":{}}}],["forroot",{"_index":318,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forroot(opt",{"_index":319,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forrootasync",{"_index":324,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forrootasync(opt",{"_index":325,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["forth",{"_index":514,"title":{},"body":{"contributing.html":{}}}],["found",{"_index":13,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["found.error.t",{"_index":6,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["found.error.ts:7",{"_index":22,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["framework",{"_index":729,"title":{},"body":{"index.html":{}}}],["full",{"_index":539,"title":{},"body":{"contributing.html":{}}}],["function",{"_index":180,"title":{},"body":{"classes/HealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["gener",{"_index":187,"title":{},"body":{"classes/HealthIndicator.html":{},"contributing.html":{}}}],["generatehttperror",{"_index":54,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["generatehttperror(key",{"_index":62,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["get",{"_index":9,"title":{"contributing.html":{},"index.html":{}},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{}}}],["gethealthcheckexecutor",{"_index":209,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["gethealthcheckexecutor(endpoint",{"_index":230,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["gethealthchecksmap",{"_index":211,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["getstatu",{"_index":182,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["getstatus(key",{"_index":183,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["getterminusopt",{"_index":739,"title":{},"body":{"index.html":{}}}],["getterminusoptions(db",{"_index":748,"title":{},"body":{"index.html":{}}}],["gist",{"_index":506,"title":{},"body":{"contributing.html":{}}}],["git",{"_index":529,"title":{},"body":{"contributing.html":{}}}],["github",{"_index":429,"title":{},"body":{"contributing.html":{}}}],["gitter",{"_index":459,"title":{},"body":{"contributing.html":{}}}],["give",{"_index":509,"title":{},"body":{"contributing.html":{}}}],["given",{"_index":76,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["global",{"_index":328,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["go",{"_index":512,"title":{},"body":{"contributing.html":{}}}],["godaddy/terminu",{"_index":33,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"dependencies.html":{},"index.html":{}}}],["google'",{"_index":591,"title":{},"body":{"contributing.html":{}}}],["graph",{"_index":775,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":756,"title":{},"body":{"index.html":{}}}],["guid",{"_index":594,"title":{},"body":{"contributing.html":{}}}],["guidelin",{"_index":409,"title":{},"body":{"contributing.html":{}}}],["gulp",{"_index":641,"title":{},"body":{"contributing.html":{}}}],["handl",{"_index":307,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["hash",{"_index":635,"title":{},"body":{"contributing.html":{}}}],["have",{"_index":507,"title":{},"body":{"contributing.html":{}}}],["header",{"_index":612,"title":{},"body":{"contributing.html":{}}}],["health",{"_index":30,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["healthcheck",{"_index":243,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"index.html":{}}}],["healthcheckerror",{"_index":17,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{}}}],["healthcheckerror('healthcheck",{"_index":280,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthcheckerror).caus",{"_index":263,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthcheckmap",{"_index":236,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthchecks[endpoint.url",{"_index":282,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healtherror",{"_index":264,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["healthi",{"_index":189,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["healthind",{"_index":94,"title":{"classes/HealthIndicator.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{}}}],["healthindicatorfunct",{"_index":227,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["healthindicatorresult",{"_index":91,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["healthmodul",{"_index":749,"title":{},"body":{"index.html":{}}}],["hear",{"_index":521,"title":{},"body":{"contributing.html":{}}}],["heavili",{"_index":733,"title":{},"body":{"index.html":{}}}],["help",{"_index":402,"title":{},"body":{"contributing.html":{}}}],["here",{"_index":408,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["histori",{"_index":610,"title":{},"body":{"contributing.html":{}}}],["host",{"_index":222,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["http",{"_index":48,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["http://localhost:3000/health",{"_index":753,"title":{},"body":{"index.html":{}}}],["httpmodul",{"_index":329,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["https://google.com",{"_index":122,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["https://nestjs.com",{"_index":769,"title":{},"body":{"index.html":{}}}],["httpserver",{"_index":205,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["httpservic",{"_index":59,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["id",{"_index":390,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["idea",{"_index":487,"title":{},"body":{"contributing.html":{}}}],["identifi",{"_index":699,"title":{},"body":{"coverage.html":{}}}],["imper",{"_index":664,"title":{},"body":{"contributing.html":{}}}],["implement",{"_index":252,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["import",{"_index":32,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"index.html":{}}}],["importantli",{"_index":517,"title":{},"body":{"contributing.html":{}}}],["improv",{"_index":653,"title":{},"body":{"contributing.html":{}}}],["includ",{"_index":535,"title":{},"body":{"contributing.html":{}}}],["inclus",{"_index":423,"title":{},"body":{"contributing.html":{}}}],["index",{"_index":51,"title":{"index.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indic",{"_index":45,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["indicator.interfac",{"_index":356,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["indicator.interface.t",{"_index":785,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["indicator.t",{"_index":176,"title":{},"body":{"classes/HealthIndicator.html":{},"coverage.html":{}}}],["indicator.ts:14",{"_index":186,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["indicators/database/database.health.t",{"_index":131,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"coverage.html":{}}}],["indicators/database/database.health.ts:32",{"_index":135,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["indicators/database/database.health.ts:47",{"_index":145,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["indicators/database/database.health.ts:62",{"_index":137,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["indicators/dns/dns.health.t",{"_index":43,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"coverage.html":{}}}],["indicators/dns/dns.health.ts:13",{"_index":60,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/dns/dns.health.ts:27",{"_index":88,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/dns/dns.health.ts:41",{"_index":65,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/dns/dns.health.ts:76",{"_index":75,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["indicators/health",{"_index":175,"title":{},"body":{"classes/HealthIndicator.html":{},"coverage.html":{}}}],["individu",{"_index":687,"title":{},"body":{"contributing.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"index.html":{}}}],["inform",{"_index":495,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["initi",{"_index":23,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["inject",{"_index":40,"title":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["inject(terminus_lib",{"_index":254,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["inject(terminus_module_opt",{"_index":253,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["insid",{"_index":357,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["inspir",{"_index":734,"title":{},"body":{"index.html":{}}}],["instal",{"_index":736,"title":{},"body":{"index.html":{}}}],["instanc",{"_index":12,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/TerminusBootstrapService.html":{}}}],["instance.serv",{"_index":291,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["instanceof",{"_index":170,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{}}}],["integr",{"_index":308,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["interfac",{"_index":92,"title":{"interfaces/DatabasePingCheckSettings.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces/terminu",{"_index":331,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["intern",{"_index":306,"title":{},"body":{"modules/TerminusCoreModule.html":{},"index.html":{}}}],["investig",{"_index":519,"title":{},"body":{"contributing.html":{}}}],["ishealthi",{"_index":123,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{}}}],["issu",{"_index":415,"title":{},"body":{"contributing.html":{}}}],["it'",{"_index":684,"title":{},"body":{"contributing.html":{}}}],["javascript",{"_index":592,"title":{},"body":{"contributing.html":{}}}],["join",{"_index":761,"title":{},"body":{"index.html":{}}}],["json.stringify(healtherror.caus",{"_index":265,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["kamil",{"_index":764,"title":{},"body":{"index.html":{}}}],["keep",{"_index":421,"title":{},"body":{"contributing.html":{}}}],["key",{"_index":68,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{}}}],["kind",{"_index":472,"title":{},"body":{"contributing.html":{}}}],["latest",{"_index":580,"title":{},"body":{"contributing.html":{}}}],["lead",{"_index":606,"title":{},"body":{"contributing.html":{}}}],["legend",{"_index":298,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["letter",{"_index":668,"title":{},"body":{"contributing.html":{}}}],["lib.provid",{"_index":335,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["lib.provider.t",{"_index":710,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/.../health",{"_index":784,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/.../promis",{"_index":788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/.../terminu",{"_index":786,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["lib/.../terminus.constants.t",{"_index":789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lib/errors/connect",{"_index":5,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"coverage.html":{}}}],["lib/errors/timeout",{"_index":376,"title":{},"body":{"classes/TimeoutError.html":{},"coverage.html":{}}}],["lib/health",{"_index":42,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"coverage.html":{}}}],["lib/interfaces/health",{"_index":787,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lib/interfaces/terminu",{"_index":351,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["lib/terminu",{"_index":196,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/terminus.constants.t",{"_index":713,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["lib/terminus.module.t",{"_index":368,"title":{},"body":{"modules/TerminusModule.html":{}}}],["lib/terminus.module.ts:18",{"_index":369,"title":{},"body":{"modules/TerminusModule.html":{}}}],["lib/terminus.module.ts:29",{"_index":370,"title":{},"body":{"modules/TerminusModule.html":{}}}],["lib/utils/promis",{"_index":382,"title":{},"body":{"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["librari",{"_index":202,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["licens",{"_index":682,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["line",{"_index":551,"title":{},"body":{"contributing.html":{}}}],["list",{"_index":359,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["liter",{"_index":185,"title":{},"body":{"classes/HealthIndicator.html":{},"miscellaneous/typealiases.html":{}}}],["live",{"_index":508,"title":{},"body":{"contributing.html":{}}}],["livio",{"_index":766,"title":{},"body":{"index.html":{}}}],["local",{"_index":577,"title":{},"body":{"contributing.html":{}}}],["log",{"_index":239,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["logerror",{"_index":212,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["logerror(messag",{"_index":237,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["logger",{"_index":206,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["logger(terminusbootstrapservice.nam",{"_index":247,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["loghealthcheckregist",{"_index":213,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["loghealthcheckregister(healthcheck",{"_index":240,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["long",{"_index":146,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["longer",{"_index":619,"title":{},"body":{"contributing.html":{}}}],["look",{"_index":609,"title":{},"body":{"contributing.html":{}}}],["love",{"_index":401,"title":{},"body":{"contributing.html":{}}}],["mail",{"_index":696,"title":{},"body":{"contributing.html":{}}}],["main",{"_index":571,"title":{},"body":{"contributing.html":{}}}],["major",{"_index":474,"title":{},"body":{"contributing.html":{}}}],["make",{"_index":403,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["mandatori",{"_index":618,"title":{},"body":{"contributing.html":{}}}],["map",{"_index":235,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["map((p",{"_index":258,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["map(healthind",{"_index":257,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["master",{"_index":533,"title":{},"body":{"contributing.html":{}}}],["match",{"_index":39,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["maximum",{"_index":147,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["mayb",{"_index":493,"title":{},"body":{"contributing.html":{}}}],["mean",{"_index":656,"title":{},"body":{"contributing.html":{}}}],["merg",{"_index":568,"title":{},"body":{"contributing.html":{}}}],["messag",{"_index":117,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["metadata",{"_index":724,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":52,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["millisecond",{"_index":386,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["mind",{"_index":584,"title":{},"body":{"contributing.html":{}}}],["minim",{"_index":503,"title":{},"body":{"contributing.html":{}}}],["miscellan",{"_index":781,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":466,"title":{},"body":{"contributing.html":{}}}],["mit",{"_index":755,"title":{},"body":{"index.html":{}}}],["modul",{"_index":204,"title":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"modules.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modulemetadata",{"_index":354,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["more",{"_index":585,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["motiv",{"_index":671,"title":{},"body":{"contributing.html":{}}}],["ms",{"_index":158,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["much",{"_index":432,"title":{},"body":{"contributing.html":{}}}],["myśliwiec",{"_index":765,"title":{},"body":{"index.html":{}}}],["name",{"_index":26,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{}}}],["necessari",{"_index":547,"title":{},"body":{"contributing.html":{}}}],["need",{"_index":499,"title":{},"body":{"contributing.html":{}}}],["nest",{"_index":61,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"contributing.html":{},"index.html":{}}}],["nestframework",{"_index":771,"title":{},"body":{"index.html":{}}}],["nestj",{"_index":223,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["nestjs/common",{"_index":90,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"dependencies.html":{}}}],["nestjs/common/interfac",{"_index":355,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["nestjs/cor",{"_index":251,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"dependencies.html":{}}}],["nestjs/nest",{"_index":527,"title":{},"body":{"contributing.html":{}}}],["nestjs/terminu",{"_index":737,"title":{},"body":{"index.html":{}}}],["nestjs/typeorm",{"_index":719,"title":{},"body":{"dependencies.html":{}}}],["nestjs:mast",{"_index":558,"title":{},"body":{"contributing.html":{}}}],["new",{"_index":113,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newlin",{"_index":677,"title":{},"body":{"contributing.html":{}}}],["node.j",{"_index":728,"title":{},"body":{"index.html":{}}}],["note",{"_index":548,"title":{},"body":{"contributing.html":{}}}],["npm",{"_index":643,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["number",{"_index":108,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":69,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["object.assign(previ",{"_index":278,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["object.keys(healthchecks).foreach(endpoint",{"_index":268,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["ok",{"_index":754,"title":{},"body":{"index.html":{}}}],["on",{"_index":353,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{}}}],["onapplicationbootstrap",{"_index":214,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["open",{"_index":422,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["option",{"_index":28,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["options.connect",{"_index":166,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["options.import",{"_index":341,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.inject",{"_index":348,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.interfac",{"_index":332,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["options.interface.t",{"_index":352,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["options.interface.ts:48",{"_index":375,"title":{},"body":{"interfaces/TerminusOptionsFactory.html":{}}}],["options.timeout",{"_index":168,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["options.useclass",{"_index":345,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.useexist",{"_index":343,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["options.usefactori",{"_index":342,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["optionsfactori",{"_index":349,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["optionsfactory.createterminusopt",{"_index":350,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["order",{"_index":502,"title":{},"body":{"contributing.html":{}}}],["origin",{"_index":556,"title":{},"body":{"contributing.html":{}}}],["out",{"_index":304,"title":{},"body":{"modules/TerminusCoreModule.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["outlin",{"_index":475,"title":{},"body":{"contributing.html":{}}}],["over",{"_index":604,"title":{},"body":{"contributing.html":{}}}],["overflow",{"_index":436,"title":{},"body":{"contributing.html":{}}}],["overflow'",{"_index":443,"title":{},"body":{"contributing.html":{}}}],["overview",{"_index":776,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p.catch((error",{"_index":259,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["p.then((result",{"_index":261,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["packag",{"_index":716,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":629,"title":{},"body":{"contributing.html":{}}}],["param",{"_index":35,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}}}],["paramet",{"_index":24,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"classes/TimeoutError.html":{}}}],["parti",{"_index":200,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["pass",{"_index":397,"title":{},"body":{"classes/TimeoutError-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":534,"title":{},"body":{"contributing.html":{}}}],["peer",{"_index":717,"title":{},"body":{"dependencies.html":{}}}],["peopl",{"_index":454,"title":{},"body":{"contributing.html":{}}}],["perf",{"_index":652,"title":{},"body":{"contributing.html":{}}}],["perform",{"_index":654,"title":{},"body":{"contributing.html":{}}}],["pick",{"_index":364,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["ping",{"_index":142,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["pingcheck",{"_index":56,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["pingcheck(key",{"_index":72,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{}}}],["pingdb",{"_index":133,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{}}}],["pingdb(connect",{"_index":144,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["pingdn",{"_index":57,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["pingdns(url",{"_index":87,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["place",{"_index":438,"title":{},"body":{"contributing.html":{}}}],["pleas",{"_index":424,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["possibl",{"_index":498,"title":{},"body":{"contributing.html":{}}}],["pr",{"_index":525,"title":{},"body":{"contributing.html":{}}}],["precis",{"_index":603,"title":{},"body":{"contributing.html":{}}}],["prefix",{"_index":486,"title":{},"body":{"contributing.html":{}}}],["prepar",{"_index":66,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["present",{"_index":665,"title":{},"body":{"contributing.html":{}}}],["prevent",{"_index":480,"title":{},"body":{"contributing.html":{}}}],["previou",{"_index":276,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["print",{"_index":693,"title":{},"body":{"contributing.html":{}}}],["privat",{"_index":53,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["problem",{"_index":414,"title":{},"body":{"contributing.html":{}}}],["process",{"_index":686,"title":{},"body":{"contributing.html":{}}}],["progress",{"_index":727,"title":{},"body":{"index.html":{}}}],["project",{"_index":485,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["promin",{"_index":448,"title":{},"body":{"contributing.html":{}}}],["promis",{"_index":86,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"miscellaneous/variables.html":{}}}],["promise((_",{"_index":389,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["promise.al",{"_index":255,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["promise.race([promis",{"_index":398,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["promisetimeout",{"_index":150,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["promisetimeout(timeout",{"_index":161,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["promisetimeouterror",{"_index":152,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["properti",{"_index":174,"title":{},"body":{"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{}}}],["propos",{"_index":467,"title":{},"body":{"contributing.html":{}}}],["protect",{"_index":181,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["provid",{"_index":37,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":210,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["publish",{"_index":631,"title":{},"body":{"contributing.html":{}}}],["pull",{"_index":464,"title":{},"body":{"contributing.html":{}}}],["push",{"_index":555,"title":{},"body":{"contributing.html":{}}}],["question",{"_index":413,"title":{},"body":{"contributing.html":{}}}],["quick",{"_index":685,"title":{},"body":{"contributing.html":{}}}],["race",{"_index":395,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["rais",{"_index":384,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["re",{"_index":561,"title":{},"body":{"contributing.html":{}}}],["reach",{"_index":457,"title":{},"body":{"contributing.html":{}}}],["read",{"_index":425,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["readabl",{"_index":607,"title":{},"body":{"contributing.html":{}}}],["readili",{"_index":497,"title":{},"body":{"contributing.html":{}}}],["readonli",{"_index":96,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{}}}],["real",{"_index":456,"title":{},"body":{"contributing.html":{}}}],["rebas",{"_index":563,"title":{},"body":{"contributing.html":{}}}],["redirect",{"_index":453,"title":{},"body":{"contributing.html":{}}}],["reduc",{"_index":275,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["refactor",{"_index":655,"title":{},"body":{"contributing.html":{}}}],["refer",{"_index":221,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["refhost",{"_index":217,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["reflect",{"_index":723,"title":{},"body":{"dependencies.html":{}}}],["regist",{"_index":256,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["registr",{"_index":242,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["reject",{"_index":388,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["reject(new",{"_index":393,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["relat",{"_index":47,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["releas",{"_index":106,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["remot",{"_index":573,"title":{},"body":{"contributing.html":{}}}],["repo",{"_index":528,"title":{},"body":{"contributing.html":{}}}],["report",{"_index":430,"title":{},"body":{"contributing.html":{}}}],["repositori",{"_index":463,"title":{},"body":{"contributing.html":{}}}],["repres",{"_index":177,"title":{},"body":{"classes/HealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["reproduc",{"_index":500,"title":{},"body":{"contributing.html":{}}}],["reproduct",{"_index":504,"title":{},"body":{"contributing.html":{}}}],["request",{"_index":49,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{},"index.html":{}}}],["requir",{"_index":157,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["reset",{"_index":303,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}],["respon",{"_index":77,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["respond",{"_index":138,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["respons",{"_index":741,"title":{},"body":{"index.html":{}}}],["rest",{"_index":678,"title":{},"body":{"contributing.html":{}}}],["result",{"_index":38,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results.push(result",{"_index":262,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["return",{"_index":70,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["revert",{"_index":633,"title":{},"body":{"contributing.html":{}}}],["rm",{"_index":553,"title":{},"body":{"contributing.html":{}}}],["rout",{"_index":270,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["rule",{"_index":419,"title":{},"body":{"contributing.html":{}}}],["run",{"_index":538,"title":{},"body":{"contributing.html":{}}}],["rxj",{"_index":627,"title":{},"body":{"contributing.html":{},"dependencies.html":{}}}],["safe",{"_index":569,"title":{},"body":{"contributing.html":{}}}],["sampl",{"_index":624,"title":{},"body":{"contributing.html":{}}}],["saucelab",{"_index":649,"title":{},"body":{"contributing.html":{}}}],["save",{"_index":450,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["scalabl",{"_index":731,"title":{},"body":{"index.html":{}}}],["scan+email",{"_index":694,"title":{},"body":{"contributing.html":{}}}],["scenario",{"_index":505,"title":{},"body":{"contributing.html":{}}}],["scope",{"_index":616,"title":{},"body":{"contributing.html":{}}}],["script",{"_index":645,"title":{},"body":{"contributing.html":{}}}],["search",{"_index":491,"title":{},"body":{"contributing.html":{}}}],["see",{"_index":600,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["semi",{"_index":659,"title":{},"body":{"contributing.html":{}}}],["send",{"_index":557,"title":{},"body":{"contributing.html":{}}}],["server",{"_index":224,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"index.html":{}}}],["servic",{"_index":220,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["set",{"_index":154,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"modules/TerminusCoreModule.html":{},"index.html":{}}}],["settimeout",{"_index":391,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["sha",{"_index":636,"title":{},"body":{"contributing.html":{}}}],["shell",{"_index":578,"title":{},"body":{"contributing.html":{}}}],["side",{"_index":732,"title":{},"body":{"index.html":{}}}],["sign",{"_index":680,"title":{},"body":{"contributing.html":{}}}],["simpl",{"_index":688,"title":{},"body":{"contributing.html":{}}}],["small",{"_index":488,"title":{},"body":{"contributing.html":{}}}],["someon",{"_index":442,"title":{},"body":{"contributing.html":{}}}],["soon",{"_index":104,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"contributing.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"contributing.html":{},"index.html":{}}}],["space",{"_index":658,"title":{},"body":{"contributing.html":{}}}],["spec",{"_index":586,"title":{},"body":{"contributing.html":{}}}],["special",{"_index":615,"title":{},"body":{"contributing.html":{}}}],["sponsor",{"_index":757,"title":{},"body":{"index.html":{}}}],["stack",{"_index":435,"title":{},"body":{"contributing.html":{}}}],["start",{"_index":399,"title":{"contributing.html":{},"index.html":{}},"body":{"contributing.html":{}}}],["statement",{"_index":700,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":309,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["statu",{"_index":192,"title":{},"body":{"classes/HealthIndicator.html":{},"index.html":{}}}],["statuscod",{"_index":107,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["statustext",{"_index":109,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["stay",{"_index":440,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["still",{"_index":562,"title":{},"body":{"contributing.html":{}}}],["store",{"_index":229,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["string",{"_index":63,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/variables.html":{}}}],["style",{"_index":593,"title":{},"body":{"contributing.html":{}}}],["subject",{"_index":617,"title":{},"body":{"contributing.html":{}}}],["submiss",{"_index":418,"title":{},"body":{"contributing.html":{}}}],["submit",{"_index":462,"title":{},"body":{"contributing.html":{}}}],["successfulli",{"_index":483,"title":{},"body":{"contributing.html":{}}}],["succinct",{"_index":663,"title":{},"body":{"contributing.html":{}}}],["suggest",{"_index":559,"title":{},"body":{"contributing.html":{}}}],["suit",{"_index":540,"title":{},"body":{"contributing.html":{}}}],["super",{"_index":97,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["super('connect",{"_index":36,"title":{},"body":{"classes/ConnectionNotFoundError.html":{}}}],["super(`timeout",{"_index":381,"title":{},"body":{"classes/TimeoutError.html":{}}}],["support",{"_index":427,"title":{},"body":{"contributing.html":{},"index.html":{},"modules.html":{}}}],["sure",{"_index":470,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["svg",{"_index":773,"title":{},"body":{"modules.html":{}}}],["synchron",{"_index":321,"title":{},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{}}}],["system",{"_index":445,"title":{},"body":{"contributing.html":{}}}],["systemat",{"_index":451,"title":{},"body":{"contributing.html":{}}}],["tabl",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":437,"title":{},"body":{"contributing.html":{}}}],["take",{"_index":148,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["tbc",{"_index":590,"title":{},"body":{"contributing.html":{}}}],["tens",{"_index":666,"title":{},"body":{"contributing.html":{}}}],["terminu",{"_index":201,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["terminus.const",{"_index":250,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{}}}],["terminus.modul",{"_index":337,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["terminus_lib",{"_index":249,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminus_module_opt",{"_index":248,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminusbootstrapservic",{"_index":195,"title":{"injectables/TerminusBootstrapService.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"coverage.html":{},"overview.html":{}}}],["terminuscoremodul",{"_index":296,"title":{"modules/TerminusCoreModule.html":{}},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"modules.html":{},"overview.html":{}}}],["terminuscoremodule.forroot(opt",{"_index":373,"title":{},"body":{"modules/TerminusModule.html":{}}}],["terminuscoremodule.forrootasync(opt",{"_index":374,"title":{},"body":{"modules/TerminusModule.html":{}}}],["terminusendpoint",{"_index":231,"title":{"interfaces/TerminusEndpoint.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["terminusexplor",{"_index":271,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["terminuslib",{"_index":790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminuslibprovid",{"_index":334,"title":{},"body":{"modules/TerminusCoreModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["terminuslogg",{"_index":358,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"miscellaneous/typealiases.html":{}}}],["terminusmodul",{"_index":336,"title":{"modules/TerminusModule.html":{}},"body":{"modules/TerminusCoreModule.html":{},"modules/TerminusModule.html":{},"modules.html":{}}}],["terminusmodule.forrootasync",{"_index":747,"title":{},"body":{"index.html":{}}}],["terminusmoduleasyncopt",{"_index":312,"title":{"interfaces/TerminusModuleAsyncOptions.html":{}},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["terminusmoduleopt",{"_index":216,"title":{"interfaces/TerminusModuleOptions.html":{}},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["terminusoptionsfactori",{"_index":330,"title":{"interfaces/TerminusOptionsFactory.html":{}},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"coverage.html":{}}}],["test",{"_index":537,"title":{},"body":{"contributing.html":{},"miscellaneous/variables.html":{}}}],["thank",{"_index":567,"title":{},"body":{"contributing.html":{},"index.html":{}}}],["that'",{"_index":566,"title":{},"body":{"contributing.html":{}}}],["these.revert",{"_index":632,"title":{},"body":{"contributing.html":{}}}],["third",{"_index":199,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"miscellaneous/variables.html":{}}}],["this.bootstrapterminu",{"_index":295,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.connect",{"_index":167,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["this.createasyncoptionsprovider(opt",{"_index":344,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["this.createasyncproviders(opt",{"_index":340,"title":{},"body":{"modules/TerminusCoreModule.html":{}}}],["this.executehealthind",{"_index":272,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.generatehttperror(key",{"_index":129,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["this.gethealthcheckexecutor(endpoint",{"_index":283,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.gethealthchecksmap",{"_index":284,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.getstatus(key",{"_index":115,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["this.httpserv",{"_index":293,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.httpservice.request",{"_index":99,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["this.logerror.bind(thi",{"_index":288,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.logger.error(messag",{"_index":266,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.logger.log",{"_index":269,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.loghealthcheckregister(healthcheck",{"_index":289,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.options.endpoints.reduc",{"_index":281,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.options.logg",{"_index":287,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.pingdb(connect",{"_index":169,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["this.pingdns(url",{"_index":125,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["this.refhost.applicationref.gethttpserv",{"_index":294,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["this.terminus(this.httpserv",{"_index":285,"title":{},"body":{"injectables/TerminusBootstrapService.html":{}}}],["through",{"_index":574,"title":{},"body":{"contributing.html":{}}}],["throughout",{"_index":583,"title":{},"body":{"contributing.html":{}}}],["throw",{"_index":67,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{}}}],["thrown",{"_index":10,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"classes/TimeoutError.html":{}}}],["time",{"_index":156,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"contributing.html":{}}}],["timeout",{"_index":78,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["timeout.t",{"_index":383,"title":{},"body":{"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timeouterror",{"_index":151,"title":{"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{}},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{},"classes/TimeoutError-1.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["timeouterror('tim",{"_index":394,"title":{},"body":{"classes/TimeoutError-1.html":{},"miscellaneous/variables.html":{}}}],["timeout}m",{"_index":171,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/TimeoutError.html":{}}}],["today",{"_index":406,"title":{},"body":{"contributing.html":{}}}],["todo",{"_index":101,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["token",{"_index":791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tool",{"_index":623,"title":{},"body":{"contributing.html":{}}}],["topromis",{"_index":100,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["touch",{"_index":762,"title":{},"body":{"index.html":{}}}],["tracker",{"_index":492,"title":{},"body":{"contributing.html":{}}}],["travi",{"_index":646,"title":{},"body":{"contributing.html":{}}}],["tri",{"_index":124,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["true",{"_index":126,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{}}}],["twitter",{"_index":770,"title":{},"body":{"index.html":{}}}],["two",{"_index":676,"title":{},"body":{"contributing.html":{}}}],["type",{"_index":27,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"modules/TerminusModule.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{},"contributing.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealias",{"_index":782,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":149,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"dependencies.html":{}}}],["typeormmodul",{"_index":745,"title":{},"body":{"index.html":{}}}],["typeormmodule.forroot",{"_index":746,"title":{},"body":{"index.html":{}}}],["typescript",{"_index":120,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["ui",{"_index":576,"title":{},"body":{"contributing.html":{}}}],["unfortun",{"_index":518,"title":{},"body":{"contributing.html":{}}}],["unit",{"_index":587,"title":{},"body":{"contributing.html":{}}}],["unknown",{"_index":20,"title":{},"body":{"classes/ConnectionNotFoundError.html":{},"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"classes/TimeoutError.html":{}}}],["up",{"_index":193,"title":{},"body":{"classes/HealthIndicator.html":{},"index.html":{}}}],["updat",{"_index":560,"title":{},"body":{"contributing.html":{}}}],["upgrad",{"_index":103,"title":{},"body":{"injectables/DNSHealthIndicator.html":{}}}],["upstream",{"_index":572,"title":{},"body":{"contributing.html":{}}}],["url",{"_index":73,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{}}}],["us",{"_index":46,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"classes/HealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"contributing.html":{},"miscellaneous/typealiases.html":{}}}],["usag",{"_index":738,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":346,"title":{},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["useexist",{"_index":366,"title":{},"body":{"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{}}}],["usefactori",{"_index":347,"title":{},"body":{"modules/TerminusCoreModule.html":{},"interfaces/TerminusEndpoint.html":{},"interfaces/TerminusModuleAsyncOptions.html":{},"interfaces/TerminusModuleOptions.html":{},"interfaces/TerminusOptionsFactory.html":{},"index.html":{}}}],["user",{"_index":286,"title":{},"body":{"injectables/TerminusBootstrapService.html":{},"contributing.html":{}}}],["usevalu",{"_index":338,"title":{},"body":{"modules/TerminusCoreModule.html":{},"miscellaneous/variables.html":{}}}],["util",{"_index":153,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{}}}],["valu",{"_index":141,"title":{},"body":{"injectables/DatabaseHealthIndicator.html":{},"interfaces/DatabasePingCheckSettings.html":{},"injectables/TerminusBootstrapService.html":{},"miscellaneous/variables.html":{}}}],["variabl",{"_index":711,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["variou",{"_index":622,"title":{},"body":{"contributing.html":{}}}],["veri",{"_index":602,"title":{},"body":{"contributing.html":{}}}],["version",{"_index":515,"title":{},"body":{"contributing.html":{}}}],["via",{"_index":458,"title":{},"body":{"contributing.html":{}}}],["view",{"_index":441,"title":{},"body":{"contributing.html":{}}}],["visibl",{"_index":449,"title":{},"body":{"contributing.html":{}}}],["void",{"_index":71,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"injectables/TerminusBootstrapService.html":{}}}],["vote",{"_index":444,"title":{},"body":{"contributing.html":{}}}],["want",{"_index":428,"title":{},"body":{"contributing.html":{}}}],["we'll",{"_index":692,"title":{},"body":{"contributing.html":{}}}],["wealth",{"_index":510,"title":{},"body":{"contributing.html":{}}}],["web",{"_index":575,"title":{},"body":{"contributing.html":{}}}],["websit",{"_index":768,"title":{},"body":{"index.html":{}}}],["well",{"_index":621,"title":{},"body":{"contributing.html":{}}}],["whether",{"_index":188,"title":{},"body":{"classes/HealthIndicator.html":{}}}],["white",{"_index":657,"title":{},"body":{"contributing.html":{}}}],["without",{"_index":511,"title":{},"body":{"contributing.html":{}}}],["word",{"_index":675,"title":{},"body":{"contributing.html":{}}}],["work",{"_index":468,"title":{},"body":{"contributing.html":{}}}],["workaround",{"_index":496,"title":{},"body":{"contributing.html":{}}}],["wrap",{"_index":595,"title":{},"body":{"contributing.html":{}}}],["wrapper",{"_index":793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ye",{"_index":80,"title":{},"body":{"injectables/DNSHealthIndicator.html":{},"classes/HealthIndicator.html":{},"modules/TerminusModule.html":{}}}],["you'd",{"_index":760,"title":{},"body":{"index.html":{}}}],["you'v",{"_index":431,"title":{},"body":{"contributing.html":{}}}],["zone.j",{"_index":628,"title":{},"body":{"contributing.html":{}}}],["zoom",{"_index":302,"title":{},"body":{"modules/TerminusCoreModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/ConnectionNotFoundError.html":{"url":"classes/ConnectionNotFoundError.html","title":"class - ConnectionNotFoundError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConnectionNotFoundError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/connection-not-found.error.ts\n        \n\n            \n                Description\n            \n            \n                Error which gets thrown when the connection\ninstance was not found in the application context\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cause: unknown)\n                    \n                \n                        \n                            \n                                Defined in lib/errors/connection-not-found.error.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes the error\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The cause of the health check error\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * Error which gets thrown when the connection\n * instance was not found in the application context\n */\nexport class ConnectionNotFoundError extends HealthCheckError {\n  /**\n   * Initializes the error\n   * @param {unknown} cause The cause of the health check error\n   */\n  constructor(cause: unknown) {\n    super('Connection provider not found in application context', cause);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DNSHealthIndicator.html":{"url":"injectables/DNSHealthIndicator.html","title":"injectable - DNSHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DNSHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/dns/dns.health.ts\n        \n\n            \n                Description\n            \n            \n                The DNSHealthIndicator contains health indicators\nwhich are used for health checks related to HTTP requests\nand DNS\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                generateHttpError\n                            \n                            \n                                    Async\n                                pingCheck\n                            \n                            \n                                    Private\n                                    Async\n                                pingDNS\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService)\n                    \n                \n                        \n                            \n                                Defined in lib/health-indicators/dns/dns.health.ts:13\n                            \n                        \n\n                \n                    \n                            Initializes the health indicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The HttpService provided by Nest\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            generateHttpError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateHttpError(key: string, error: AxiosError)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/dns/dns.health.ts:41\n                            \n                        \n\n\n                \n                    \n                            Prepares and throw a HealthCheckError\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used for the result object\n\n                                                        \n                                                \n                                                \n                                                        error\n                                                        \n                                                                    AxiosError\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The thrown error\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            pingCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingCheck(key: string, url: string, options?: AxiosRequestConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/dns/dns.health.ts:76\n                            \n                        \n\n\n                \n                    \n                            Checks if the given url respons in the given timeout\nand returns a result object corresponding to the result\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used for the result object\n\n                                                        \n                                                \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The url which should be request\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    AxiosRequestConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional axios options\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * dnsHealthIndicator.pingCheck(&#39;google&#39;, &#39;https://google.com&#39;, { timeout: 800 })\n   *\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            pingDNS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingDNS(url: string, options: AxiosRequestConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/dns/dns.health.ts:27\n                            \n                        \n\n\n                \n                    \n                            Executes a request with the given parameters\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The url of the health check\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    AxiosRequestConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The optional axios options of the request\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, HttpService } from '@nestjs/common';\nimport { HealthIndicatorResult } from '../../interfaces';\nimport { AxiosResponse, AxiosRequestConfig, AxiosError } from 'axios';\nimport { HealthIndicator } from '../health-indicator';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The DNSHealthIndicator contains health indicators\n * which are used for health checks related to HTTP requests\n * and DNS\n */\n@Injectable()\nexport class DNSHealthIndicator extends HealthIndicator {\n  /**\n   * Initializes the health indicator\n   * @param httpService The HttpService provided by Nest\n   */\n  constructor(private readonly httpService: HttpService) {\n    super();\n  }\n\n  /**\n   * Executes a request with the given parameters\n   * @param url The url of the health check\n   * @param options The optional axios options of the request\n   */\n  private async pingDNS(\n    url: string,\n    options: AxiosRequestConfig,\n  ): Promise | unknown> {\n    return await this.httpService.request({ url, ...options }).toPromise();\n  }\n\n  /**\n   * Prepares and throw a HealthCheckError\n   * @param key The key which will be used for the result object\n   * @param error The thrown error\n   *\n   * @throws {HealthCheckError}\n   */\n  private generateHttpError(key: string, error: AxiosError) {\n    // TODO: Check for `error.isAxiosError`\n    // Upgrade axios for that as soon ^0.19.0 is released\n    if (error) {\n      let statusCode: number;\n      let statusText: string;\n      if (error.response) {\n        statusCode = error.response.status;\n        statusText = error.response.statusText;\n      }\n      throw new HealthCheckError(\n        error.message,\n        this.getStatus(key, false, {\n          message: error.message,\n          statusCode,\n          statusText,\n        }),\n      );\n    }\n  }\n\n  /**\n   * Checks if the given url respons in the given timeout\n   * and returns a result object corresponding to the result\n   * @param key The key which will be used for the result object\n   * @param url The url which should be request\n   * @param options Optional axios options\n   *\n   * @throws {HealthCheckError} In case the health indicator failed\n   *\n   * @example\n   * ```TypeScript\n   * dnsHealthIndicator.pingCheck('google', 'https://google.com', { timeout: 800 })\n   * ```\n   */\n  async pingCheck(\n    key: string,\n    url: string,\n    options?: AxiosRequestConfig,\n  ): Promise {\n    let isHealthy = false;\n\n    try {\n      await this.pingDNS(url, options);\n      isHealthy = true;\n    } catch (err) {\n      this.generateHttpError(key, err);\n    }\n\n    return this.getStatus(key, isHealthy);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/DatabaseHealthIndicator.html":{"url":"injectables/DatabaseHealthIndicator.html","title":"injectable - DatabaseHealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  DatabaseHealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/database/database.health.ts\n        \n\n            \n                Description\n            \n            \n                The DatabaseHealthIndicator contains health indicators\nwhich are used for health checks related to database\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                pingCheck\n                            \n                            \n                                    Private\n                                    Async\n                                pingDb\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(connection: Connection)\n                    \n                \n                        \n                            \n                                Defined in lib/health-indicators/database/database.health.ts:32\n                            \n                        \n\n                \n                    \n                            Initializes the database indicator\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                  \n                                                        \n                                                                    Connection\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The database connection of the application context\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            pingCheck\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingCheck(key: string, options: DatabasePingCheckSettings)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/database/database.health.ts:62\n                            \n                        \n\n\n                \n                    \n                            Checks if the database responds in (default) 1000ms and\nreturns a result object corresponding to the result\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                        \n                                                                The key which will be used for the result object\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    DatabasePingCheckSettings\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                        \n                                                                The optional options for the database ping check\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * databaseHealthIndicator.pingCheck(&#39;db&#39;, { timeout: 800 });\n   *\n                                        \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            pingDb\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pingDb(connection: Connection, timeout: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/database/database.health.ts:47\n                            \n                        \n\n\n                \n                    \n                            Pings a database\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        connection\n                                                        \n                                                                    Connection\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The connection which the ping should get executed\n\n                                                        \n                                                \n                                                \n                                                        timeout\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The timeout how long the ping should maximum take\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     {}\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable, Optional } from '@nestjs/common';\nimport { HealthIndicatorResult } from '../..';\nimport { Connection } from 'typeorm';\nimport { HealthCheckError } from '@godaddy/terminus';\nimport {\n  promiseTimeout,\n  TimeoutError as PromiseTimeoutError,\n} from '../../utils';\nimport { TimeoutError, ConnectionNotFoundError } from '../../errors';\nimport { HealthIndicator } from '../health-indicator';\n\n/**\n * The settings for the database ping check\n */\nexport interface DatabasePingCheckSettings {\n  /**\n   * The connection which the ping check should get executed\n   */\n  connection?: Connection;\n  /**\n   * The amount of time the check should require in ms\n   * @default 1000\n   */\n  timeout?: number;\n}\n\n/**\n * The DatabaseHealthIndicator contains health indicators\n * which are used for health checks related to database\n */\n@Injectable()\nexport class DatabaseHealthIndicator extends HealthIndicator {\n  /**\n   * Initializes the database indicator\n   * @param connection The database connection of the application context\n   */\n  constructor(@Optional() private readonly connection: Connection) {\n    super();\n  }\n\n  /**\n   * Pings a database\n   * @param connection The connection which the ping should get executed\n   * @param timeout The timeout how long the ping should maximum take\n   *\n   */\n  private async pingDb(connection: Connection, timeout: number) {\n    return await promiseTimeout(timeout, connection.query('SELECT 1'));\n  }\n\n  /**\n   * Checks if the database responds in (default) 1000ms and\n   * returns a result object corresponding to the result\n   * @param key The key which will be used for the result object\n   * @param options The optional options for the database ping check\n   *\n   * @example\n   * ```TypeScript\n   * databaseHealthIndicator.pingCheck('db', { timeout: 800 });\n   * ```\n   */\n  async pingCheck(\n    key: string,\n    options: DatabasePingCheckSettings = {},\n  ): Promise {\n    let isHealthy = false;\n    const connection = options.connection || this.connection;\n    const timeout = options.timeout || 1000;\n\n    if (!connection) {\n      throw new ConnectionNotFoundError(\n        this.getStatus(key, isHealthy, {\n          message: 'Connection provider not found in application context',\n        }),\n      );\n    }\n\n    try {\n      await this.pingDb(connection, timeout);\n      isHealthy = true;\n    } catch (err) {\n      if (err instanceof PromiseTimeoutError) {\n        throw new TimeoutError(\n          timeout,\n          this.getStatus(key, isHealthy, {\n            message: `timeout of ${timeout}ms exceeded`,\n          }),\n        );\n      }\n    }\n\n    if (isHealthy) {\n      return this.getStatus(key, isHealthy);\n    } else {\n      throw new HealthCheckError(\n        'Database is not available',\n        this.getStatus(key, isHealthy),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DatabasePingCheckSettings.html":{"url":"interfaces/DatabasePingCheckSettings.html","title":"interface - DatabasePingCheckSettings","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DatabasePingCheckSettings\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/database/database.health.ts\n        \n\n            \n                Description\n            \n            \n                The settings for the database ping check\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        connection\n                                \n                                \n                                            Optional\n                                        timeout\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        connection\n                                    \n                                \n                                \n                                    \n                                        connection:     Connection\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Connection\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The connection which the ping check should get executed\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timeout\n                                    \n                                \n                                \n                                    \n                                        timeout:     number\n\n                                    \n                                \n\n                                \n                                    \n                                        Default value : 1000\n\n                                    \n                                \n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The amount of time the check should require in ms\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable, Optional } from '@nestjs/common';\nimport { HealthIndicatorResult } from '../..';\nimport { Connection } from 'typeorm';\nimport { HealthCheckError } from '@godaddy/terminus';\nimport {\n  promiseTimeout,\n  TimeoutError as PromiseTimeoutError,\n} from '../../utils';\nimport { TimeoutError, ConnectionNotFoundError } from '../../errors';\nimport { HealthIndicator } from '../health-indicator';\n\n/**\n * The settings for the database ping check\n */\nexport interface DatabasePingCheckSettings {\n  /**\n   * The connection which the ping check should get executed\n   */\n  connection?: Connection;\n  /**\n   * The amount of time the check should require in ms\n   * @default 1000\n   */\n  timeout?: number;\n}\n\n/**\n * The DatabaseHealthIndicator contains health indicators\n * which are used for health checks related to database\n */\n@Injectable()\nexport class DatabaseHealthIndicator extends HealthIndicator {\n  /**\n   * Initializes the database indicator\n   * @param connection The database connection of the application context\n   */\n  constructor(@Optional() private readonly connection: Connection) {\n    super();\n  }\n\n  /**\n   * Pings a database\n   * @param connection The connection which the ping should get executed\n   * @param timeout The timeout how long the ping should maximum take\n   *\n   */\n  private async pingDb(connection: Connection, timeout: number) {\n    return await promiseTimeout(timeout, connection.query('SELECT 1'));\n  }\n\n  /**\n   * Checks if the database responds in (default) 1000ms and\n   * returns a result object corresponding to the result\n   * @param key The key which will be used for the result object\n   * @param options The optional options for the database ping check\n   *\n   * @example\n   * ```TypeScript\n   * databaseHealthIndicator.pingCheck('db', { timeout: 800 });\n   * ```\n   */\n  async pingCheck(\n    key: string,\n    options: DatabasePingCheckSettings = {},\n  ): Promise {\n    let isHealthy = false;\n    const connection = options.connection || this.connection;\n    const timeout = options.timeout || 1000;\n\n    if (!connection) {\n      throw new ConnectionNotFoundError(\n        this.getStatus(key, isHealthy, {\n          message: 'Connection provider not found in application context',\n        }),\n      );\n    }\n\n    try {\n      await this.pingDb(connection, timeout);\n      isHealthy = true;\n    } catch (err) {\n      if (err instanceof PromiseTimeoutError) {\n        throw new TimeoutError(\n          timeout,\n          this.getStatus(key, isHealthy, {\n            message: `timeout of ${timeout}ms exceeded`,\n          }),\n        );\n      }\n    }\n\n    if (isHealthy) {\n      return this.getStatus(key, isHealthy);\n    } else {\n      throw new HealthCheckError(\n        'Database is not available',\n        this.getStatus(key, isHealthy),\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HealthIndicator.html":{"url":"classes/HealthIndicator.html","title":"class - HealthIndicator","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HealthIndicator\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/health-indicators/health-indicator.ts\n        \n\n            \n                Description\n            \n            \n                Represents an abstract health indicator\nwith common functionalities\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                getStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            getStatus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getStatus(key: string, isHealthy: boolean, options?: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/health-indicators/health-indicator.ts:14\n                            \n                        \n\n\n                \n                    \n                            Generates the health indicator result object\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The key which will be used as key for the result object\n\n                                                        \n                                                \n                                                \n                                                        isHealthy\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Whether the health indicator is healthy\n\n                                                        \n                                                \n                                                \n                                                        options\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Additional options which will get appended to the result object\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     HealthIndicatorResult\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthIndicatorResult } from '../';\n\n/**\n * Represents an abstract health indicator\n * with common functionalities\n */\nexport abstract class HealthIndicator {\n  /**\n   * Generates the health indicator result object\n   * @param key The key which will be used as key for the result object\n   * @param isHealthy Whether the health indicator is healthy\n   * @param options Additional options which will get appended to the result object\n   */\n  protected getStatus(\n    key: string,\n    isHealthy: boolean,\n    options?: { [key: string]: unknown },\n  ): HealthIndicatorResult {\n    return {\n      [key]: {\n        status: isHealthy ? 'up' : 'down',\n        ...options,\n      },\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TerminusBootstrapService.html":{"url":"injectables/TerminusBootstrapService.html","title":"injectable - TerminusBootstrapService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TerminusBootstrapService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/terminus-bootstrap.service.ts\n        \n\n            \n                Description\n            \n            \n                Bootstraps the third party Terminus library with the\nconfigured Module options\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                httpServer\n                            \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                bootstrapTerminus\n                            \n                            \n                                    Private\n                                    Async\n                                executeHealthIndicators\n                            \n                            \n                                    Private\n                                getHealthCheckExecutor\n                            \n                            \n                                    Public\n                                getHealthChecksMap\n                            \n                            \n                                    Private\n                                logError\n                            \n                            \n                                    Private\n                                logHealthCheckRegister\n                            \n                            \n                                    Public\n                                onApplicationBootstrap\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: TerminusModuleOptions, terminus: Terminus, refHost: ApplicationReferenceHost)\n                    \n                \n                        \n                            \n                                Defined in lib/terminus-bootstrap.service.ts:30\n                            \n                        \n\n                \n                    \n                            Initializes the service\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                    TerminusModuleOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The terminus module options\n\n                                                        \n                                                \n                                                \n                                                        terminus\n                                                  \n                                                        \n                                                                    Terminus\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The terminus instance\n\n                                                        \n                                                \n                                                \n                                                        refHost\n                                                  \n                                                        \n                                                                    ApplicationReferenceHost\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The application reference host of NestJS which contains the http server instance\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            bootstrapTerminus\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        bootstrapTerminus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:144\n                            \n                        \n\n\n                \n                    \n                            Bootstraps the third party terminus library with\nthe given module options\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Async\n                            executeHealthIndicators\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        executeHealthIndicators(healthIndicators: HealthIndicatorFunction[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:50\n                            \n                        \n\n\n                \n                    \n                            Executes the given health indicators and stores the caused\nerrors and results\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        healthIndicators\n                                                        \n                                                                    HealthIndicatorFunction[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The health indicators which should get executed\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getHealthCheckExecutor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHealthCheckExecutor(endpoint: TerminusEndpoint)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:102\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        endpoint\n                                                        \n                                                                    TerminusEndpoint\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getHealthChecksMap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getHealthChecksMap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:130\n                            \n                        \n\n\n                \n                    \n                            Returns the health check map using the configured health\nindicators\n\n\n                            \n                                Returns :     HealthCheckMap\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logError\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logError(message: string, error: HealthCheckError | Error)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Logs an error message of terminus\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The log message\n\n                                                        \n                                                \n                                                \n                                                        error\n                                                        \n                                                                    HealthCheckError | Error\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The error which was thrown\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            logHealthCheckRegister\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        logHealthCheckRegister(healthChecks: HealthCheckMap)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:93\n                            \n                        \n\n\n                \n                    \n                            Logs the health check registration to the logger\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        healthChecks\n                                                        \n                                                                    HealthCheckMap\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The health check map to log\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            onApplicationBootstrap\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        onApplicationBootstrap()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:158\n                            \n                        \n\n\n                \n                    \n                            Gets called when the application gets bootstrapped.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            httpServer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        httpServer:     Server\n\n                    \n                \n                    \n                        \n                            Type :     Server\n\n                        \n                    \n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:26\n                            \n                        \n\n                \n                    \n                        The http server of NestJS\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            logger\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        logger:     \n\n                    \n                \n                    \n                        \n                            Default value : new Logger(TerminusBootstrapService.name, true)\n                        \n                    \n                        \n                            \n                                    Defined in lib/terminus-bootstrap.service.ts:30\n                            \n                        \n\n                \n                    \n                        The NestJS logger\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  Inject,\n  OnApplicationBootstrap,\n  Logger,\n} from '@nestjs/common';\nimport { TERMINUS_MODULE_OPTIONS, TERMINUS_LIB } from './terminus.constants';\nimport {\n  TerminusModuleOptions,\n  HealthIndicatorFunction,\n  TerminusEndpoint,\n} from './interfaces';\nimport { ApplicationReferenceHost } from '@nestjs/core';\nimport { Server } from 'http';\nimport { HealthCheckError, Terminus, HealthCheckMap } from '@godaddy/terminus';\n\n/**\n * Bootstraps the third party Terminus library with the\n * configured Module options\n */\n@Injectable()\nexport class TerminusBootstrapService implements OnApplicationBootstrap {\n  /**\n   * The http server of NestJS\n   */\n  private httpServer: Server;\n  /**\n   * The NestJS logger\n   */\n  private readonly logger = new Logger(TerminusBootstrapService.name, true);\n\n  /**\n   * Initializes the service\n   * @param options The terminus module options\n   * @param refHost The application reference host of NestJS which contains the http server instance\n   * @param terminus The terminus instance\n   */\n  constructor(\n    @Inject(TERMINUS_MODULE_OPTIONS)\n    private readonly options: TerminusModuleOptions,\n    @Inject(TERMINUS_LIB) private readonly terminus: Terminus,\n    private readonly refHost: ApplicationReferenceHost,\n  ) {}\n\n  /**\n   * Executes the given health indicators and stores the caused\n   * errors and results\n   * @param healthIndicators The health indicators which should get executed\n   */\n  private async executeHealthIndicators(\n    healthIndicators: HealthIndicatorFunction[],\n  ): Promise {\n    const results: unknown[] = [];\n    const errors: unknown[] = [];\n    await Promise.all(\n      healthIndicators\n        // Register all promises\n        .map(healthIndicator => healthIndicator())\n        .map((p: Promise) =>\n          p.catch((error: Error) => {\n            if (error instanceof HealthCheckError) {\n              errors.push(error.causes);\n            } else {\n              throw error;\n            }\n          }),\n        )\n        .map((p: Promise) =>\n          p.then((result: unknown) => result && results.push(result)),\n        ),\n    );\n\n    return { results, errors };\n  }\n\n  /**\n   * Logs an error message of terminus\n   * @param message The log message\n   * @param error The error which was thrown\n   */\n  private logError(message: string, error: HealthCheckError | Error) {\n    if ((error as HealthCheckError).causes) {\n      const healthError: HealthCheckError = error as HealthCheckError;\n      message = `${message} ${JSON.stringify(healthError.causes)}`;\n    }\n    this.logger.error(message, error.stack);\n  }\n\n  /**\n   * Logs the health check registration to the logger\n   * @param healthChecks The health check map to log\n   */\n  private logHealthCheckRegister(healthChecks: HealthCheckMap) {\n    Object.keys(healthChecks).forEach(endpoint =>\n      this.logger.log(\n        `Mapped {${endpoint}, GET} healthcheck route`,\n        'TerminusExplorer',\n      ),\n    );\n  }\n\n  private getHealthCheckExecutor(\n    endpoint: TerminusEndpoint,\n  ): () => Promise {\n    return async () => {\n      const { results, errors } = await this.executeHealthIndicators(\n        endpoint.healthIndicators,\n      );\n\n      const info = (results || [])\n        .concat(errors || [])\n        .reduce(\n          (previous: Object, current: Object) =>\n            Object.assign(previous, current),\n          {},\n        );\n\n      if (errors.length) {\n        throw new HealthCheckError('Healthcheck failed', info);\n      } else {\n        return info;\n      }\n    };\n  }\n\n  /**\n   * Returns the health check map using the configured health\n   * indicators\n   */\n  public getHealthChecksMap(): HealthCheckMap {\n    return this.options.endpoints.reduce(\n      (healthChecks, endpoint) => {\n        healthChecks[endpoint.url] = this.getHealthCheckExecutor(endpoint);\n        return healthChecks;\n      },\n      {} as HealthCheckMap,\n    );\n  }\n\n  /**\n   * Bootstraps the third party terminus library with\n   * the given module options\n   */\n  private bootstrapTerminus() {\n    const healthChecks = this.getHealthChecksMap();\n    this.terminus(this.httpServer, {\n      healthChecks,\n      // Use the logger of the user\n      // or by the default logger if is not defined\n      logger: this.options.logger || this.logError.bind(this),\n    });\n    this.logHealthCheckRegister(healthChecks);\n  }\n\n  /**\n   * Gets called when the application gets bootstrapped.\n   */\n  public onApplicationBootstrap() {\n    // httpServer for express, instance.server for fastify\n    this.httpServer = this.refHost.applicationRef.getHttpServer();\n    this.bootstrapTerminus();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusCoreModule.html":{"url":"modules/TerminusCoreModule.html","title":"module - TerminusCoreModule","body":"\n                   \n\n\n\n\n    Modules\n    TerminusCoreModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusCoreModule\n\n\n\ncluster_TerminusCoreModule_providers\n\n\n\n\nTerminusBootstrapService\n\nTerminusBootstrapService\n\n\n\nTerminusCoreModule\n\nTerminusCoreModule\n\nTerminusCoreModule -->\n\nTerminusBootstrapService->TerminusCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/terminus-core.module.ts\n        \n\n\n        \n            Description\n        \n        \n            The internal Terminus Module which handles the integration\nwith the third party Terminus library and Nest\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TerminusBootstrapService\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            createAsyncOptionsProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAsyncOptionsProvider(options: TerminusModuleAsyncOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-core.module.ts:100\n                            \n                        \n\n\n                \n                    \n                            Returns the asynchrnous Terminus options providers depending on the\ngiven module options\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleAsyncOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Options for the asynchrnous terminus module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Provider\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            createAsyncProviders\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createAsyncProviders(options: TerminusModuleAsyncOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-core.module.ts:80\n                            \n                        \n\n\n                \n                    \n                            Returns the asynchrnous providers depending on the given module\noptions\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleAsyncOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Options for the asynchrnous terminus module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Provider[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(options: TerminusModuleOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-core.module.ts:35\n                            \n                        \n\n\n                \n                    \n                            Bootstraps the internal Terminus Module with the given options\nsynchronously and sets the correct providers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The options to bootstrap the module synchronously\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicModule\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRootAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRootAsync(options: TerminusModuleAsyncOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus-core.module.ts:59\n                            \n                        \n\n\n                \n                    \n                            Bootstraps the internal Terminus Module with the given\noptions asynchronously and sets the correct providers\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleAsyncOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The options to bootstrap the module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicModule\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {\n  DynamicModule,\n  Global,\n  Module,\n  Provider,\n  HttpModule,\n} from '@nestjs/common';\nimport {\n  TerminusModuleOptions,\n  TerminusModuleAsyncOptions,\n  TerminusOptionsFactory,\n} from './interfaces/terminus-module-options.interface';\nimport { TERMINUS_MODULE_OPTIONS } from './terminus.constants';\nimport { TerminusBootstrapService } from './terminus-bootstrap.service';\nimport { TerminusLibProvider } from './terminus-lib.provider';\nimport { TerminusModule } from './terminus.module';\nimport { DatabaseHealthIndicator } from '.';\nimport { DNSHealthIndicator } from './health-indicators';\n\n/**\n * The internal Terminus Module which handles the integration\n * with the third party Terminus library and Nest\n */\n@Global()\n@Module({\n  providers: [TerminusLibProvider, TerminusBootstrapService],\n  exports: [],\n})\nexport class TerminusCoreModule {\n  /**\n   * Bootstraps the internal Terminus Module with the given options\n   * synchronously and sets the correct providers\n   * @param options The options to bootstrap the module synchronously\n   */\n  static forRoot(options: TerminusModuleOptions): DynamicModule {\n    const terminusModuleOptions = {\n      provide: TERMINUS_MODULE_OPTIONS,\n      useValue: options,\n    };\n\n    return {\n      module: TerminusCoreModule,\n      imports: [HttpModule],\n      providers: [\n        terminusModuleOptions,\n        TerminusLibProvider,\n        TerminusBootstrapService,\n        DatabaseHealthIndicator,\n      ],\n      exports: [DatabaseHealthIndicator],\n    };\n  }\n\n  /**\n   * Bootstraps the internal Terminus Module with the given\n   * options asynchronously and sets the correct providers\n   * @param options The options to bootstrap the module\n   */\n  static forRootAsync(options: TerminusModuleAsyncOptions): DynamicModule {\n    const asyncProviders = this.createAsyncProviders(options);\n    return {\n      module: TerminusModule,\n      imports: [...(options.imports || []), HttpModule],\n      providers: [\n        ...asyncProviders,\n        TerminusBootstrapService,\n        TerminusLibProvider,\n        DatabaseHealthIndicator,\n        DNSHealthIndicator,\n      ],\n      exports: [DatabaseHealthIndicator, DNSHealthIndicator],\n    };\n  }\n\n  /**\n   * Returns the asynchrnous providers depending on the given module\n   * options\n   * @param options Options for the asynchrnous terminus module\n   */\n  private static createAsyncProviders(\n    options: TerminusModuleAsyncOptions,\n  ): Provider[] {\n    if (options.useFactory || options.useExisting) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n    return [\n      this.createAsyncOptionsProvider(options),\n      {\n        provide: options.useClass,\n        useClass: options.useClass,\n      },\n    ];\n  }\n\n  /**\n   * Returns the asynchrnous Terminus options providers depending on the\n   * given module options\n   * @param options Options for the asynchrnous terminus module\n   */\n  private static createAsyncOptionsProvider(\n    options: TerminusModuleAsyncOptions,\n  ): Provider {\n    if (options.useFactory) {\n      return {\n        provide: TERMINUS_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || [],\n      };\n    }\n    return {\n      provide: TERMINUS_MODULE_OPTIONS,\n      useFactory: async (optionsFactory: TerminusOptionsFactory) =>\n        await optionsFactory.createTerminusOptions(),\n      inject: [options.useClass || options.useExisting],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusEndpoint.html":{"url":"interfaces/TerminusEndpoint.html","title":"interface - TerminusEndpoint","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusEndpoint\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                Represents one endpoint / health check\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        healthIndicators\n                                \n                                \n                                        url\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        healthIndicators\n                                    \n                                \n                                \n                                    \n                                        healthIndicators:     HealthIndicatorFunction[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     HealthIndicatorFunction[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The health checks which should get executed.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        url\n                                    \n                                \n                                \n                                    \n                                        url:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The url of the endpoint / health check\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The logger which will be used inside the terminus application\n * to log errors or messages\n */\nexport type TerminusLogger = (\n  message: any,\n  error?: HealthCheckError | Error,\n) => any;\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoint {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoint[];\n\n  logger?: TerminusLogger;\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options f$r the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TerminusModule.html":{"url":"modules/TerminusModule.html","title":"module - TerminusModule","body":"\n                   \n\n\n\n\n    Modules\n    TerminusModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            lib/terminus.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Terminus Module which represents the integration of the\n\n        \n\n\n        \n            \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(options?: TerminusModuleOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus.module.ts:18\n                            \n                        \n\n\n                \n                    \n                            Bootstraps the Terminus Module synchronously\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleOptions\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                The options for the Terminus Module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicModule\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRootAsync\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRootAsync(options: TerminusModuleAsyncOptions)\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/terminus.module.ts:29\n                            \n                        \n\n\n                \n                    \n                            Bootstrap the Terminus Module asynchronously\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                        \n                                                                    TerminusModuleAsyncOptions\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                The options for the Terminus module\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     DynamicModule\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport {\n  TerminusModuleOptions,\n  TerminusModuleAsyncOptions,\n} from './interfaces/terminus-module-options.interface';\nimport { TerminusCoreModule } from './terminus-core.module';\n\n/**\n * Terminus Module which represents the integration of the\n * @godaddy/terminus module with the Nest ecosystem.\n */\n@Module({})\nexport class TerminusModule {\n  /**\n   * Bootstraps the Terminus Module synchronously\n   * @param options The options for the Terminus Module\n   */\n  static forRoot(options?: TerminusModuleOptions): DynamicModule {\n    return {\n      module: TerminusModule,\n      imports: [TerminusCoreModule.forRoot(options)],\n    };\n  }\n\n  /**\n   * Bootstrap the Terminus Module asynchronously\n   * @param options The options for the Terminus module\n   */\n  static forRootAsync(options: TerminusModuleAsyncOptions): DynamicModule {\n    return {\n      module: TerminusModule,\n      imports: [TerminusCoreModule.forRootAsync(options)],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusModuleAsyncOptions.html":{"url":"interfaces/TerminusModuleAsyncOptions.html","title":"interface - TerminusModuleAsyncOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusModuleAsyncOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The options f$r the asynchronous Terminus module creation\n\n            \n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        inject\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        useClass\n                                \n                                \n                                            Optional\n                                        useExisting\n                                \n                                \n                                            Optional\n                                        useFactory\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inject\n                                    \n                                \n                                \n                                    \n                                        inject:     unknown[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     unknown[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The providers which should get injected\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The name of the module\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useClass\n                                    \n                                \n                                \n                                    \n                                        useClass:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The class which should be used to provide the Terminus options\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useExisting\n                                    \n                                \n                                \n                                    \n                                        useExisting:     Type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Import existing providers from other module\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                    \n                                \n                                \n                                    \n                                        useFactory:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The factory which should be used to provide the Terminus options\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The logger which will be used inside the terminus application\n * to log errors or messages\n */\nexport type TerminusLogger = (\n  message: any,\n  error?: HealthCheckError | Error,\n) => any;\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoint {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoint[];\n\n  logger?: TerminusLogger;\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options f$r the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusModuleOptions.html":{"url":"interfaces/TerminusModuleOptions.html","title":"interface - TerminusModuleOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusModuleOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The options of the terminus module\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        endpoints\n                                \n                                \n                                            Optional\n                                        logger\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        endpoints\n                                    \n                                \n                                \n                                    \n                                        endpoints:     TerminusEndpoint[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TerminusEndpoint[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    A list of endpoints\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logger\n                                    \n                                \n                                \n                                    \n                                        logger:     TerminusLogger\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     TerminusLogger\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The logger which will be used inside the terminus application\n * to log errors or messages\n */\nexport type TerminusLogger = (\n  message: any,\n  error?: HealthCheckError | Error,\n) => any;\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoint {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoint[];\n\n  logger?: TerminusLogger;\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options f$r the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TerminusOptionsFactory.html":{"url":"interfaces/TerminusOptionsFactory.html","title":"interface - TerminusOptionsFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TerminusOptionsFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/interfaces/terminus-module-options.interface.ts\n        \n\n            \n                Description\n            \n            \n                The interface for the factory which provides the Terminus options\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    createTerminusOptions\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createTerminusOptions\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateTerminusOptions()\n                    \n                \n\n\n                        \n                            \n                                    Defined in lib/interfaces/terminus-module-options.interface.ts:48\n                            \n                        \n\n\n                \n                    \n                            The function which returns the Terminus Options\n\n\n                            \n                                Returns :     Promise | TerminusModuleOptions\n\n                            \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Type } from '@nestjs/common';\nimport { ModuleMetadata } from '@nestjs/common/interfaces';\nimport { HealthIndicatorFunction } from './health-indicator.interface';\nimport { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * The logger which will be used inside the terminus application\n * to log errors or messages\n */\nexport type TerminusLogger = (\n  message: any,\n  error?: HealthCheckError | Error,\n) => any;\n\n/**\n * Represents one endpoint / health check\n */\nexport interface TerminusEndpoint {\n  /**\n   * The url of the endpoint / health check\n   */\n  url: string;\n  /**\n   * The health checks which should get executed.\n   */\n  healthIndicators: HealthIndicatorFunction[];\n}\n\n/**\n * The options of the terminus module\n */\nexport interface TerminusModuleOptions {\n  /**\n   * A list of endpoints\n   */\n  endpoints: TerminusEndpoint[];\n\n  logger?: TerminusLogger;\n}\n\n/**\n * The interface for the factory which provides the Terminus options\n */\nexport interface TerminusOptionsFactory {\n  /**\n   * The function which returns the Terminus Options\n   */\n  createTerminusOptions():\n    | Promise\n    | TerminusModuleOptions;\n}\n\n/**\n * The options f$r the asynchronous Terminus module creation\n */\nexport interface TerminusModuleAsyncOptions\n  extends Pick {\n  /**\n   * The name of the module\n   */\n  name?: string;\n  /**\n   * The class which should be used to provide the Terminus options\n   */\n  useClass?: Type;\n  /**\n   * Import existing providers from other module\n   */\n  useExisting?: Type;\n  /**\n   * The factory which should be used to provide the Terminus options\n   */\n  useFactory?: (\n    ...args: unknown[]\n  ) => Promise | TerminusModuleOptions;\n  /**\n   * The providers which should get injected\n   */\n  inject?: unknown[];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeoutError.html":{"url":"classes/TimeoutError.html","title":"class - TimeoutError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeoutError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/errors/timeout-error.ts\n        \n\n            \n                Description\n            \n            \n                Gets thrown when the timeout of the\ndatabase health check exceeds\n\n            \n\n            \n                Extends\n            \n            \n                    HealthCheckError\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(timeout: number, cause: unknown)\n                    \n                \n                        \n                            \n                                Defined in lib/errors/timeout-error.ts:7\n                            \n                        \n\n                \n                    \n                            Initializes the error\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        timeout\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The given timeout in ms\n\n                                                        \n                                                \n                                                \n                                                        cause\n                                                  \n                                                        \n                                                                    unknown\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                The cause of the health check error\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HealthCheckError } from '@godaddy/terminus';\n\n/**\n * Gets thrown when the timeout of the\n * database health check exceeds\n */\nexport class TimeoutError extends HealthCheckError {\n  /**\n   * Initializes the error\n   * @param {number} timeout The given timeout in ms\n   * @param {unknown} cause The cause of the health check error\n   */\n  constructor(timeout: number, cause: unknown) {\n    super(`timeout of ${timeout}ms exceeded`, cause);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TimeoutError-1.html":{"url":"classes/TimeoutError-1.html","title":"class - TimeoutError-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TimeoutError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            lib/utils/promise-timeout.ts\n        \n\n            \n                Description\n            \n            \n                An errors which gets raised when the timeout\nexceeded\n\n            \n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TimeoutError extends Error {}\n\n/**\n * Executes a promise in the given timeout. If the promise\n * does not finish in the given timeout, it will\n * raise a TimeoutError\n *\n * @param {number} ms The timeout in milliseconds\n * @param {Promise} promise The promise which should get executed\n */\nexport const promiseTimeout = function(\n  ms: number,\n  promise: Promise,\n): Promise {\n  // Create a promise that rejects in  milliseconds\n  let timeout = new Promise((_, reject) => {\n    let id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new TimeoutError('Timed out in ' + ms + 'ms.'));\n    }, ms);\n  });\n\n  // Returns a race between our timeout and the passed in promise\n  return Promise.race([promise, timeout]);\n};\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"contributing.html":{"url":"contributing.html","title":"getting-started - contributing","body":"\n                   \n\nContributing to Nest\nWe would love for you to contribute to Nest and help make it even better than it is\ntoday! As a contributor, here are the guidelines we would like you to follow:\n\nCode of Conduct\nQuestion or Problem?\nIssues and Bugs\nFeature Requests\nSubmission Guidelines\nCoding Rules\nCommit Message Guidelines\n\n\n\n Code of Conduct\nHelp us keep Nest open and inclusive. Please read and follow our [Code of Conduct][coc]. -->\n\n Got a Question or Problem?\nDo not open issues for general support questions as we want to keep GitHub issues for bug reports and feature requests. You've got much better chances of getting your question answered on Stack Overflow where the questions should be tagged with tag nestjs.\nStack Overflow is a much better place to ask questions since:\n\n\nquestions and answers stay available for public viewing so your question / answer might help someone else\nStack Overflow's voting system assures that the best answers are prominently visible.\n\nTo save your and our time, we will systematically close all issues that are requests for general support and redirect people to Stack Overflow.\nIf you would like to chat about the question in real-time, you can reach out via our gitter channel.\n Found a Bug?\nIf you find a bug in the source code, you can help us by\nsubmitting an issue to our GitHub Repository. Even better, you can\nsubmit a Pull Request with a fix.\n Missing a Feature?\nYou can request a new feature by submitting an issue to our GitHub\nRepository. If you would like to implement a new feature, please submit an issue with\na proposal for your work first, to be sure that we can use it.\nPlease consider what kind of change it is:\n\nFor a Major Feature, first open an issue and outline your proposal so that it can be\ndiscussed. This will also allow us to better coordinate our efforts, prevent duplication of work,\nand help you to craft the change so that it is successfully accepted into the project. For your issue name, please prefix your proposal with [discussion], for example \"[discussion]: your feature idea\".\nSmall Features can be crafted and directly submitted as a Pull Request.\n\n Submission Guidelines\n Submitting an Issue\nBefore you submit an issue, please search the issue tracker, maybe an issue for your problem already exists and the discussion might inform you of workarounds readily available.\nWe want to fix all the issues as soon as possible, but before fixing a bug we need to reproduce and confirm it. In order to reproduce bugs we will systematically ask you to provide a minimal reproduction scenario using a repository or Gist. Having a live, reproducible scenario gives us wealth of important information without going back & forth to you with additional questions like:\n\nversion of NestJS used\n3rd-party libraries and their versions\nand most importantly - a use-case that fails\n\n\n\n\n\nUnfortunately, we are not able to investigate / fix bugs without a minimal reproduction, so if we don't hear back from you we are going to close an issue that don't have enough info to be reproduced.\nYou can file new issues by filling out our new issue form.\n Submitting a Pull Request (PR)\nBefore you submit your Pull Request (PR) consider the following guidelines:\n\nSearch GitHub for an open or closed PR\nthat relates to your submission. You don't want to duplicate effort.\nFork the nestjs/nest repo.\nMake your changes in a new git branch:\n  git checkout -b my-fix-branch master\nCreate your patch, including appropriate test cases.\n\nFollow our Coding Rules.\nRun the full Nest test suite, as described in the developer documentation,\nand ensure that all tests pass.\nCommit your changes using a descriptive commit message that follows our\ncommit message conventions. Adherence to these conventions\nis necessary because release notes are automatically generated from these messages.\n  git commit -a Note: the optional commit -a command line option will automatically \"add\" and \"rm\" edited files.\n\nPush your branch to GitHub:\n git push origin my-fix-branch\nIn GitHub, send a pull request to nestjs:master.\n\nIf we suggest changes then:\n\nMake the required updates.\nRe-run the Nest test suites to ensure tests are still passing.\nRebase your branch and force push to your GitHub repository (this will update your Pull Request):\ngit rebase master -i\ngit push -f\n\n\n\nThat's it! Thank you for your contribution!\nAfter your pull request is merged\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\nDelete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:\n  git push origin --delete my-fix-branch\nCheck out the master branch:\n  git checkout master -f\nDelete the local branch:\n  git branch -D my-fix-branch\nUpdate your master with the latest upstream version:\n  git pull --ff upstream master\n\n Coding Rules\nTo ensure consistency throughout the source code, keep these rules in mind as you are working:\n\nAll features or bug fixes must be tested by one or more specs (unit-tests).\n\nAll public API methods must be documented. (Details TBC). -->\nWe follow Google's JavaScript Style Guide, but wrap all code at\n100 characters. An automated formatter is available, see\nDEVELOPER.md.\n\n Commit Message Guidelines\nWe have very precise rules over how our git commit messages can be formatted.  This leads to more\nreadable messages that are easy to follow when looking through the project history.  But also,\nwe use the git commit messages to generate the Nest change log.\nCommit Message Format\nEach commit message consists of a header, a body and a footer.  The header has a special\nformat that includes a type, a scope and a subject:\n(): \n\n\n\nThe header is mandatory and the scope of the header is optional.\nAny line of the commit message cannot be longer 100 characters! This allows the message to be easier\nto read on GitHub as well as in various git tools.\nFooter should contain a closing reference to an issue if any.\nSamples: (even more samples)\ndocs(changelog) update change log to beta.5bugfix(@nestjs/core) need to depend on latest rxjs and zone.js\n\nThe version in our package.json gets copied to the one we publish, and users need the latest of these.Revert\nIf the commit reverts a previous commit, it should begin with revert:, followed by the header of the reverted commit. In the body it should say: This reverts commit ., where the hash is the SHA of the commit being reverted.\nType\nMust be one of the following:\n\nbuild: Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm)\nci: Changes to our CI configuration files and scripts (example scopes: Travis, Circle, BrowserStack, SauceLabs)\ndocs: Documentation only changes\nfeature: A new feature\nbugfix: A bug fix\nperf: A code change that improves performance\nrefactor: A code change that neither fixes a bug nor adds a feature\nstyle: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\ntest: Adding missing tests or correcting existing tests\n\nSubject\nThe subject contains succinct description of the change:\n\nuse the imperative, present tense: \"change\" not \"changed\" nor \"changes\"\ndon't capitalize first letter\nno dot (.) at the end\n\nBody\nJust as in the subject, use the imperative, present tense: \"change\" not \"changed\" nor \"changes\".\nThe body should include the motivation for the change and contrast this with previous behavior.\nFooter\nThe footer should contain any information about Breaking Changes and is also the place to\nreference GitHub issues that this commit Closes.\nBreaking Changes should start with the word BREAKING CHANGE: with a space or two newlines. The rest of the commit message is then used for this.\nA detailed explanation can be found in this document.\n Signing the CLA\n\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\n* For individuals we have a [simple click-through form][individual-cla].\n* For corporations we'll need you to\n  [print, sign and one of scan+email, fax or mail the form][corporate-cla]. -->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                lib/errors/connection-not-found.error.ts\n            \n            \n                class\n            \n            \n                ConnectionNotFoundError\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/errors/timeout-error.ts\n            \n            \n                class\n            \n            \n                TimeoutError\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/health-indicators/database/database.health.ts\n            \n            \n                injectable\n            \n            \n                DatabaseHealthIndicator\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                lib/health-indicators/database/database.health.ts\n            \n            \n                interface\n            \n            \n                DatabasePingCheckSettings\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/health-indicators/dns/dns.health.ts\n            \n            \n                injectable\n            \n            \n                DNSHealthIndicator\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                lib/health-indicators/health-indicator.ts\n            \n            \n                class\n            \n            \n                HealthIndicator\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusEndpoint\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusModuleAsyncOptions\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusModuleOptions\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                lib/interfaces/terminus-module-options.interface.ts\n            \n            \n                interface\n            \n            \n                TerminusOptionsFactory\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                lib/terminus-bootstrap.service.ts\n            \n            \n                injectable\n            \n            \n                TerminusBootstrapService\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                lib/terminus-lib.provider.ts\n            \n            \n                variable\n            \n            \n                TerminusLibProvider\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/terminus.constants.ts\n            \n            \n                variable\n            \n            \n                TERMINUS_LIB\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/terminus.constants.ts\n            \n            \n                variable\n            \n            \n                TERMINUS_MODULE_OPTIONS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/utils/promise-timeout.ts\n            \n            \n                class\n            \n            \n                TimeoutError\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                lib/utils/promise-timeout.ts\n            \n            \n                variable\n            \n            \n                promiseTimeout\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @nestjs/common : ^5.5.0\n        \n            @nestjs/core : ^5.5.0\n        \n            @nestjs/typeorm : ^5.2.2\n        \n            typeorm : ^0.2.9\n        \n            @godaddy/terminus : ^4.1.0\n        \n            reflect-metadata : 0.1.12\n        \n            rxjs : ^6.3.3\n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nThe Terminus module for Nest.\nInstallation\n\nnpm install --save @nestjs/terminus @godaddy/terminus\nUsage\nImport the Terminus module with the following options for a database health check\n\nconst getTerminusOptions = (\n  db: DatabaseHealthIndicator,\n): TerminusModuleOptions => ({\n  endpoints: [\n    {\n      // The health check will be available with /health\n      url: '/health',\n      // All the indicator which will be checked when requesting /health\n      healthIndicators: [\n        // Set the timeout for a response to 300ms\n        async () => db.pingCheck('database', { timeout: 300 })\n      ],\n    },\n  ],\n});\n\n@Module({\n  imports:[\n    // Make sure TypeOrmModule is available in the module context\n    TypeOrmModule.forRoot({ ... }),\n    TerminusModule.forRootAsync({\n      // Inject the DatabaseHealthIndicator provided by nestjs/terminus\n      inject: [DatabaseHealthIndicator],\n      useFactory: db => getTerminusOptions(db),\n    }),\n  ],\n})\nexport class HealthModule { }\nIf everything is set up correctly, you can access the healthcheck on http://localhost:3000/health.\n\n{\n  \"status\": \"ok\",\n  \"info\": {\n    \"database\": {\n      \"status\": \"up\"\n    }\n  }\n}\nFor more information, see docs or for the internal documentation\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec & Livio Brunner\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        TerminusCoreModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TerminusModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TerminusCoreModule\n\n\n\ncluster_TerminusCoreModule_providers\n\n\n\n\nTerminusBootstrapService\n\nTerminusBootstrapService\n\n\n\nTerminusCoreModule\n\nTerminusCoreModule\n\nTerminusCoreModule -->\n\nTerminusBootstrapService->TerminusCoreModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    5 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HealthIndicatorFunction   (lib/.../health-indicator.interface.ts)\n                        \n                        \n                            HealthIndicatorResult   (lib/.../health-indicator.interface.ts)\n                        \n                        \n                            TerminusLogger   (lib/.../terminus-module-options.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/interfaces/health-indicator.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        HealthIndicatorFunction\n                    \n                \n                    \n                        \n                            A health indicator function for a health check\n\n                        \n                    \n                \n                    \n                        HealthIndicatorFunction:     function\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        HealthIndicatorResult\n                    \n                \n                    \n                        \n                            The result object of a health indicator\n\n                        \n                    \n                \n                    \n                        HealthIndicatorResult:     literal type\n\n                    \n                \n            \n        \n\n    lib/interfaces/terminus-module-options.interface.ts\n    \n        \n            \n                \n                    \n                        \n                        TerminusLogger\n                    \n                \n                    \n                        \n                            The logger which will be used inside the terminus application\nto log errors or messages\n\n                        \n                    \n                \n                    \n                        TerminusLogger:     function\n\n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            promiseTimeout   (lib/.../promise-timeout.ts)\n                        \n                        \n                            TERMINUS_LIB   (lib/.../terminus.constants.ts)\n                        \n                        \n                            TERMINUS_MODULE_OPTIONS   (lib/.../terminus.constants.ts)\n                        \n                        \n                            TerminusLibProvider   (lib/.../terminus-lib.provider.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    lib/utils/promise-timeout.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            promiseTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promiseTimeout:     \n\n                    \n                \n                    \n                        \n                            Default value : function(\n  ms: number,\n  promise: Promise,\n): Promise {\n  // Create a promise that rejects in  milliseconds\n  let timeout = new Promise((_, reject) => {\n    let id = setTimeout(() => {\n      clearTimeout(id);\n      reject(new TimeoutError('Timed out in ' + ms + 'ms.'));\n    }, ms);\n  });\n\n  // Returns a race between our timeout and the passed in promise\n  return Promise.race([promise, timeout]);\n}\n                        \n                    \n\n                \n                    \n                        Executes a promise in the given timeout. If the promise\ndoes not finish in the given timeout, it will\nraise a TimeoutError\n\n                    \n                \n\n            \n        \n\n    lib/terminus.constants.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TERMINUS_LIB\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TERMINUS_LIB:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TerminusLib'\n                        \n                    \n\n                \n                    \n                        The inject token for the third party Terminus library\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TERMINUS_MODULE_OPTIONS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TERMINUS_MODULE_OPTIONS:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TerminusModuleOptions'\n                        \n                    \n\n                \n                    \n                        The inject token for the Terminus module options\n\n                    \n                \n\n            \n        \n\n    lib/terminus-lib.provider.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            TerminusLibProvider\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        TerminusLibProvider:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  provide: TERMINUS_LIB,\n  useValue: createTerminus,\n}\n                        \n                    \n\n                \n                    \n                        Create a wrapper so it is injectable & easier to test\n\n                    \n                \n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
